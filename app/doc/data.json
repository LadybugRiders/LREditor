{
    "project": {
        "name": "LREditor API",
        "description": "Documentation for Editor & Shared",
        "version": "0.0.1"
    },
    "files": {
        "app\\editor\\js\\dev\\angular\\controller_header.js": {
            "name": "app\\editor\\js\\dev\\angular\\controller_header.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "app\\editor\\js\\dev\\phaser\\levelimportereditor.js": {
            "name": "app\\editor\\js\\dev\\phaser\\levelimportereditor.js",
            "modules": {},
            "classes": {
                "Editor.LevelImporterEditor": 1
            },
            "fors": {},
            "namespaces": {
                "Editor": 1
            }
        },
        "app\\editor\\js\\dev\\phaser\\scrollerhorizontal.js": {
            "name": "app\\editor\\js\\dev\\phaser\\scrollerhorizontal.js",
            "modules": {},
            "classes": {
                "Behaviour.ScrollerHorizontal": 1
            },
            "fors": {},
            "namespaces": {
                "Behaviour": 1
            }
        },
        "app\\editor\\js\\dev\\phaser\\scrollervertical.js": {
            "name": "app\\editor\\js\\dev\\phaser\\scrollervertical.js",
            "modules": {},
            "classes": {
                "Behaviour.LR.Editor.Behaviour.ScrollerVertical": 1
            },
            "fors": {},
            "namespaces": {
                "Behaviour": 1
            }
        },
        "app\\editor\\js\\dev\\asset_manager.js": {
            "name": "app\\editor\\js\\dev\\asset_manager.js",
            "modules": {},
            "classes": {
                "Editor.AssetManager": 1
            },
            "fors": {},
            "namespaces": {
                "Editor": 1
            }
        },
        "app\\shared\\js\\dev\\phaser\\behaviour\\common\\trigger.js": {
            "name": "app\\shared\\js\\dev\\phaser\\behaviour\\common\\trigger.js",
            "modules": {},
            "classes": {
                "Behaviour.Trigger": 1
            },
            "fors": {},
            "namespaces": {
                "Behaviour": 1
            }
        },
        "app\\shared\\js\\dev\\phaser\\behaviour\\common\\trigger_change_level.js": {
            "name": "app\\shared\\js\\dev\\phaser\\behaviour\\common\\trigger_change_level.js",
            "modules": {},
            "classes": {
                "Behaviour.TriggerChangeLevel": 1
            },
            "fors": {},
            "namespaces": {
                "Behaviour": 1
            }
        },
        "app\\shared\\js\\dev\\phaser\\behaviour\\common\\trigger_cutscene.js": {
            "name": "app\\shared\\js\\dev\\phaser\\behaviour\\common\\trigger_cutscene.js",
            "modules": {},
            "classes": {
                "Behaviour.TriggerCutscene": 1
            },
            "fors": {},
            "namespaces": {
                "Behaviour": 1
            }
        },
        "app\\shared\\js\\dev\\phaser\\behaviour\\behaviour.js": {
            "name": "app\\shared\\js\\dev\\phaser\\behaviour\\behaviour.js",
            "modules": {},
            "classes": {
                "LR.Behaviour": 1
            },
            "fors": {},
            "namespaces": {
                "LR": 1
            }
        },
        "app\\shared\\js\\dev\\phaser\\behaviour\\button.js": {
            "name": "app\\shared\\js\\dev\\phaser\\behaviour\\button.js",
            "modules": {},
            "classes": {
                "Behaviour.Button": 1
            },
            "fors": {},
            "namespaces": {
                "Behaviour": 1
            }
        },
        "app\\shared\\js\\dev\\phaser\\entity\\bitmap_text.js": {
            "name": "app\\shared\\js\\dev\\phaser\\entity\\bitmap_text.js",
            "modules": {},
            "classes": {
                "Entity.BitmapText": 1
            },
            "fors": {},
            "namespaces": {
                "Entity": 1
            }
        },
        "app\\shared\\js\\dev\\phaser\\entity\\button.js": {
            "name": "app\\shared\\js\\dev\\phaser\\entity\\button.js",
            "modules": {},
            "classes": {
                "Entity.Button": 1
            },
            "fors": {},
            "namespaces": {
                "Entity": 1
            }
        },
        "app\\shared\\js\\dev\\phaser\\entity\\sprite.js": {
            "name": "app\\shared\\js\\dev\\phaser\\entity\\sprite.js",
            "modules": {},
            "classes": {
                "Entity.Sprite": 1
            },
            "fors": {},
            "namespaces": {
                "Entity": 1
            }
        },
        "app\\shared\\js\\dev\\phaser\\entity\\text.js": {
            "name": "app\\shared\\js\\dev\\phaser\\entity\\text.js",
            "modules": {},
            "classes": {
                "Entity.Text": 1
            },
            "fors": {},
            "namespaces": {
                "Entity": 1
            }
        },
        "app\\shared\\js\\dev\\phaser\\entity\\tilesprite.js": {
            "name": "app\\shared\\js\\dev\\phaser\\entity\\tilesprite.js",
            "modules": {},
            "classes": {
                "Entity.TileSprite": 1
            },
            "fors": {},
            "namespaces": {
                "Entity": 1
            }
        },
        "app\\shared\\js\\dev\\phaser\\plugin\\cutscene_manager.js": {
            "name": "app\\shared\\js\\dev\\phaser\\plugin\\cutscene_manager.js",
            "modules": {},
            "classes": {
                "Phaser.Plugin.CutsceneManager": 1
            },
            "fors": {},
            "namespaces": {
                "Phaser.Plugin": 1
            }
        },
        "app\\shared\\js\\dev\\phaser\\plugin\\dialog_manager.js": {
            "name": "app\\shared\\js\\dev\\phaser\\plugin\\dialog_manager.js",
            "modules": {},
            "classes": {
                "Phaser.Plugin.DialogManager": 1
            },
            "fors": {},
            "namespaces": {
                "Phaser.Plugin": 1
            }
        },
        "app\\shared\\js\\dev\\phaser\\plugin\\input_manager.js": {
            "name": "app\\shared\\js\\dev\\phaser\\plugin\\input_manager.js",
            "modules": {},
            "classes": {
                "Phaser.Plugin.InputManager": 1
            },
            "fors": {},
            "namespaces": {
                "Phaser.Plugin": 1
            }
        },
        "app\\shared\\js\\dev\\phaser\\plugin\\player_save.js": {
            "name": "app\\shared\\js\\dev\\phaser\\plugin\\player_save.js",
            "modules": {},
            "classes": {
                "Phaser.Plugin.PlayerSave": 1
            },
            "fors": {},
            "namespaces": {
                "Phaser.Plugin": 1
            }
        },
        "app\\shared\\js\\dev\\phaser\\plugin\\pollinator.js": {
            "name": "app\\shared\\js\\dev\\phaser\\plugin\\pollinator.js",
            "modules": {},
            "classes": {
                "Phaser.Plugin..Pollinator": 1
            },
            "fors": {},
            "namespaces": {
                "Phaser.Plugin": 1
            }
        },
        "app\\shared\\js\\dev\\phaser\\states\\state.js": {
            "name": "app\\shared\\js\\dev\\phaser\\states\\state.js",
            "modules": {},
            "classes": {
                "LR.State": 1
            },
            "fors": {},
            "namespaces": {
                "LR": 1
            }
        },
        "app\\shared\\js\\dev\\phaser\\trigger\\trigger_message_object.js": {
            "name": "app\\shared\\js\\dev\\phaser\\trigger\\trigger_message_object.js",
            "modules": {},
            "classes": {
                "Misc.TriggerMessageObject": 1
            },
            "fors": {},
            "namespaces": {
                "Misc": 1
            }
        },
        "app\\shared\\js\\dev\\phaser\\ui\\dialog_box.js": {
            "name": "app\\shared\\js\\dev\\phaser\\ui\\dialog_box.js",
            "modules": {},
            "classes": {
                "UI.DialogBox": 1
            },
            "fors": {},
            "namespaces": {
                "UI": 1
            }
        },
        "app\\shared\\js\\dev\\phaser\\body.js": {
            "name": "app\\shared\\js\\dev\\phaser\\body.js",
            "modules": {},
            "classes": {
                "LR.Body": 1
            },
            "fors": {},
            "namespaces": {
                "LR": 1
            }
        },
        "app\\shared\\js\\dev\\phaser\\collision_manager.js": {
            "name": "app\\shared\\js\\dev\\phaser\\collision_manager.js",
            "modules": {},
            "classes": {
                "LR.CollisionManager": 1
            },
            "fors": {},
            "namespaces": {
                "LR": 1
            }
        },
        "app\\shared\\js\\dev\\phaser\\game.js": {
            "name": "app\\shared\\js\\dev\\phaser\\game.js",
            "modules": {},
            "classes": {
                "LR.Game": 1
            },
            "fors": {},
            "namespaces": {
                "LR": 1
            }
        },
        "app\\shared\\js\\dev\\phaser\\gameobject.js": {
            "name": "app\\shared\\js\\dev\\phaser\\gameobject.js",
            "modules": {},
            "classes": {
                "LR.GameObject": 1
            },
            "fors": {},
            "namespaces": {
                "LR": 1
            }
        },
        "app\\shared\\js\\dev\\phaser\\levelexporter.js": {
            "name": "app\\shared\\js\\dev\\phaser\\levelexporter.js",
            "modules": {},
            "classes": {
                "LR.LevelExporter": 1
            },
            "fors": {},
            "namespaces": {
                "LR": 1
            }
        },
        "app\\shared\\js\\dev\\phaser\\levelimporter.js": {
            "name": "app\\shared\\js\\dev\\phaser\\levelimporter.js",
            "modules": {},
            "classes": {
                "LR.LevelImporter": 1
            },
            "fors": {},
            "namespaces": {
                "LR": 1
            }
        },
        "app\\shared\\js\\dev\\phaser\\levelimportergame.js": {
            "name": "app\\shared\\js\\dev\\phaser\\levelimportergame.js",
            "modules": {},
            "classes": {
                "LR.LevelImporterGame": 1
            },
            "fors": {},
            "namespaces": {
                "LR": 1
            }
        },
        "app\\shared\\js\\dev\\phaser\\levelutilities.js": {
            "name": "app\\shared\\js\\dev\\phaser\\levelutilities.js",
            "modules": {},
            "classes": {
                "LR.LevelUtilities": 1
            },
            "fors": {},
            "namespaces": {
                "LR": 1
            }
        },
        "app\\shared\\js\\dev\\phaser\\utils.js": {
            "name": "app\\shared\\js\\dev\\phaser\\utils.js",
            "modules": {},
            "classes": {
                "LR.Utils": 1
            },
            "fors": {},
            "namespaces": {
                "LR": 1
            }
        },
        "app\\shared\\js\\dev\\lr.js": {
            "name": "app\\shared\\js\\dev\\lr.js",
            "modules": {},
            "classes": {
                "LR.LR": 1
            },
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {},
    "classes": {
        "Editor.LevelImporterEditor": {
            "name": "Editor.LevelImporterEditor",
            "shortname": "Editor.LevelImporterEditor",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "Editor",
            "file": "app\\editor\\js\\dev\\phaser\\levelimportereditor.js",
            "line": 3,
            "description": "Import a level in the editor",
            "is_constructor": 1
        },
        "Behaviour.ScrollerHorizontal": {
            "name": "Behaviour.ScrollerHorizontal",
            "shortname": "Behaviour.ScrollerHorizontal",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "Behaviour",
            "file": "app\\editor\\js\\dev\\phaser\\scrollerhorizontal.js",
            "line": 3,
            "description": "Behaviour for a horizontal scroller",
            "is_constructor": 1,
            "params": [
                {
                    "name": "gameobject",
                    "description": "attached to the behavior",
                    "type": "GameObject"
                }
            ]
        },
        "Behaviour.LR.Editor.Behaviour.ScrollerVertical": {
            "name": "Behaviour.LR.Editor.Behaviour.ScrollerVertical",
            "shortname": "LR.Editor.Behaviour.ScrollerVertical",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "Behaviour",
            "file": "app\\editor\\js\\dev\\phaser\\scrollervertical.js",
            "line": 3,
            "description": "Behaviour for a vertical scroller",
            "is_constructor": 1,
            "params": [
                {
                    "name": "gameobject",
                    "description": "attached to the behavior",
                    "type": "GameObject"
                }
            ]
        },
        "Editor.AssetManager": {
            "name": "Editor.AssetManager",
            "shortname": "Editor.AssetManager",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "Editor",
            "file": "app\\editor\\js\\dev\\asset_manager.js",
            "line": 3,
            "description": "Asset manager class"
        },
        "Behaviour.Trigger": {
            "name": "Behaviour.Trigger",
            "shortname": "Behaviour.Trigger",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "Behaviour",
            "file": "app\\shared\\js\\dev\\phaser\\behaviour\\common\\trigger.js",
            "line": 7,
            "description": "Class Trigger\nWhen colliding with a valid body, it calls the function callbackName on the colliding gameobject, with messageObject as a parameter.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "gameobject",
                    "description": "",
                    "type": "GameObject"
                }
            ]
        },
        "Behaviour.TriggerChangeLevel": {
            "name": "Behaviour.TriggerChangeLevel",
            "shortname": "Behaviour.TriggerChangeLevel",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "Behaviour",
            "file": "app\\shared\\js\\dev\\phaser\\behaviour\\common\\trigger_change_level.js",
            "line": 6,
            "description": "Class TriggerChangeLevel.\nSpecial Trigger that changes level when entered",
            "is_constructor": 1,
            "params": [
                {
                    "name": "gameobject",
                    "description": "",
                    "type": "GameObject"
                }
            ]
        },
        "Behaviour.TriggerCutscene": {
            "name": "Behaviour.TriggerCutscene",
            "shortname": "Behaviour.TriggerCutscene",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "Behaviour",
            "file": "app\\shared\\js\\dev\\phaser\\behaviour\\common\\trigger_cutscene.js",
            "line": 6,
            "description": "Class TriggerCutscene.\nSpecial Trigger that executes a cutscene when colliding with the specified objects",
            "is_constructor": 1,
            "params": [
                {
                    "name": "gameobject",
                    "description": "",
                    "type": "GameObject"
                }
            ]
        },
        "LR.Behaviour": {
            "name": "LR.Behaviour",
            "shortname": "LR.Behaviour",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "LR",
            "file": "app\\shared\\js\\dev\\phaser\\behaviour\\behaviour.js",
            "line": 3,
            "description": "Script attached to a GameObject. Its update method is called every frame if the object exists.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "gameobject",
                    "description": "The GameObject this behaviour is attached to",
                    "type": "GameObject"
                }
            ]
        },
        "Behaviour.Button": {
            "name": "Behaviour.Button",
            "shortname": "Behaviour.Button",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "Behaviour",
            "file": "app\\shared\\js\\dev\\phaser\\behaviour\\button.js",
            "line": 6,
            "description": "Class Button\nWhen colliding with a valid body, it calls the function callbackName on the colliding gameobject, with messageObject as a parameter.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "gameobject",
                    "description": "",
                    "type": "GameObject"
                }
            ]
        },
        "Entity.BitmapText": {
            "name": "Entity.BitmapText",
            "shortname": "Entity.BitmapText",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "Entity",
            "file": "app\\shared\\js\\dev\\phaser\\entity\\bitmap_text.js",
            "line": 2,
            "description": "BitmapText class for webfonts",
            "is_constructor": 1,
            "params": [
                {
                    "name": "game",
                    "description": "",
                    "type": "Phaser.Game"
                },
                {
                    "name": "x",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "_key",
                    "description": "BitmapText to display",
                    "type": "String"
                },
                {
                    "name": "_text",
                    "description": "Base text",
                    "type": "Object"
                },
                {
                    "name": "_size",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "name",
                    "description": "Name of the GameObject attached",
                    "type": "Stirng"
                }
            ]
        },
        "Entity.Button": {
            "name": "Entity.Button",
            "shortname": "Entity.Button",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "Entity",
            "file": "app\\shared\\js\\dev\\phaser\\entity\\button.js",
            "line": 3,
            "description": "Button class",
            "is_constructor": 1,
            "params": [
                {
                    "name": "game",
                    "description": "",
                    "type": "Phaser.Game"
                },
                {
                    "name": "x",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "texture",
                    "description": "Key of the texture to be used",
                    "type": "String"
                },
                {
                    "name": "over",
                    "description": "frame id",
                    "type": "Number"
                },
                {
                    "name": "out",
                    "description": "frame id",
                    "type": "Number"
                },
                {
                    "name": "down",
                    "description": "frame id",
                    "type": "Number"
                },
                {
                    "name": "up",
                    "description": "frame id",
                    "type": "Number"
                },
                {
                    "name": "name",
                    "description": "Name of the GameObject attached",
                    "type": "Stirng"
                }
            ]
        },
        "Entity.Sprite": {
            "name": "Entity.Sprite",
            "shortname": "Entity.Sprite",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "Entity",
            "file": "app\\shared\\js\\dev\\phaser\\entity\\sprite.js",
            "line": 3,
            "description": "Sprite class",
            "is_constructor": 1,
            "params": [
                {
                    "name": "game",
                    "description": "",
                    "type": "Phaser.Game"
                },
                {
                    "name": "x",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "texture",
                    "description": "Key of the texture to be used",
                    "type": "String"
                },
                {
                    "name": "name",
                    "description": "Name of the GameObject attached",
                    "type": "Stirng"
                }
            ]
        },
        "Entity.Text": {
            "name": "Entity.Text",
            "shortname": "Entity.Text",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "Entity",
            "file": "app\\shared\\js\\dev\\phaser\\entity\\text.js",
            "line": 2,
            "description": "Text class for webfonts",
            "is_constructor": 1,
            "params": [
                {
                    "name": "game",
                    "description": "",
                    "type": "Phaser.Game"
                },
                {
                    "name": "x",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "_baseText",
                    "description": "Text to display",
                    "type": "String"
                },
                {
                    "name": "style",
                    "description": "Style of the text. If null, a default one will be used",
                    "type": "Object"
                },
                {
                    "name": "name",
                    "description": "Name of the GameObject attached",
                    "type": "Stirng"
                }
            ]
        },
        "Entity.TileSprite": {
            "name": "Entity.TileSprite",
            "shortname": "Entity.TileSprite",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "Entity",
            "file": "app\\shared\\js\\dev\\phaser\\entity\\tilesprite.js",
            "line": 3,
            "description": "TileSprite class",
            "is_constructor": 1,
            "params": [
                {
                    "name": "game",
                    "description": "",
                    "type": "Phaser.Game"
                },
                {
                    "name": "x",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "x",
                    "description": "",
                    "type": "Width"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "Height"
                },
                {
                    "name": "texture",
                    "description": "Key of the texture to be used",
                    "type": "String"
                },
                {
                    "name": "name",
                    "description": "Name of the GameObject attached",
                    "type": "Stirng"
                }
            ]
        },
        "Phaser.Plugin.CutsceneManager": {
            "name": "Phaser.Plugin.CutsceneManager",
            "shortname": "Phaser.Plugin.CutsceneManager",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "Phaser.Plugin",
            "file": "app\\shared\\js\\dev\\phaser\\plugin\\cutscene_manager.js",
            "line": 3,
            "description": "Start Manage cutscenes.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "game",
                    "description": "",
                    "type": "Phaser.Game"
                }
            ]
        },
        "Phaser.Plugin.DialogManager": {
            "name": "Phaser.Plugin.DialogManager",
            "shortname": "Phaser.Plugin.DialogManager",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "Phaser.Plugin",
            "file": "app\\shared\\js\\dev\\phaser\\plugin\\dialog_manager.js",
            "line": 3,
            "description": "Load and Manage a DialogManager.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "game",
                    "description": "",
                    "type": "Phaser.Game"
                }
            ]
        },
        "Phaser.Plugin.InputManager": {
            "name": "Phaser.Plugin.InputManager",
            "shortname": "Phaser.Plugin.InputManager",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "Phaser.Plugin",
            "file": "app\\shared\\js\\dev\\phaser\\plugin\\input_manager.js",
            "line": 2,
            "description": "InputManager refers to input keys as actions, and not as number.\nBy this way, you can bind callbacks to an action, then change the key triggering this action or freeze it for every\ncallback bound to this action\n\nHow to use it:\ngame.plugins.add(Phaser.Plugin.InputManager);\n\nCommon usage :\n1. Create Keys Data :\n\t var keysData = {\"valid\" : { key : Phaser.Keyboard.SPACEBAR }, \"cancel\" : { key : Phaser.Keyboard.C } };\n2. Init \n\t game.inputManager.init(keysData);\n3. Bind a Key to an Action \n\t game.inputManager.bindKeyPress(\"valid\",callback,context,priority);\n\nNB : You can associate a priority to the callbacks you register. If a callback returns true,\nthe other callbacks of lower priority for this same event won't be triggered.\n\n4. When the SPACEBAR is pressed, every callback bound to \"valid\" action will be triggered\n\nWarning: this class is a singleton.",
            "is_constructor": 1
        },
        "Phaser.Plugin.PlayerSave": {
            "name": "Phaser.Plugin.PlayerSave",
            "shortname": "Phaser.Plugin.PlayerSave",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "Phaser.Plugin",
            "file": "app\\shared\\js\\dev\\phaser\\plugin\\player_save.js",
            "line": 3,
            "description": "Class PlayerSave. Load and Manages the save data for the player.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "game",
                    "description": "",
                    "type": "Phaser.Game"
                },
                {
                    "name": "parent",
                    "description": "",
                    "type": "Phaser.Group"
                }
            ]
        },
        "Phaser.Plugin..Pollinator": {
            "name": "Phaser.Plugin..Pollinator",
            "shortname": "Phaser.Plugin..Pollinator",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "Phaser.Plugin",
            "file": "app\\shared\\js\\dev\\phaser\\plugin\\pollinator.js",
            "line": 7,
            "description": "Listen and dispatch events.\n\nHow to use it:\ngame.plugins.add(Phaser.Plugin.Pollinator);\ngame.pollinator.on(\"myEvent\", ...);\n...\n...\n...\ngame.pollinator.dispatch(\"myEvent\");\n\nWarning: this class is a singleton.",
            "is_constructor": 1
        },
        "LR.State": {
            "name": "LR.State",
            "shortname": "LR.State",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "LR",
            "file": "app\\shared\\js\\dev\\phaser\\states\\state.js",
            "line": 2,
            "description": "Class for State",
            "is_constructor": 1,
            "params": [
                {
                    "name": "param_description",
                    "description": "",
                    "type": "Param_type"
                }
            ]
        },
        "Misc.TriggerMessageObject": {
            "name": "Misc.TriggerMessageObject",
            "shortname": "Misc.TriggerMessageObject",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "Misc",
            "file": "app\\shared\\js\\dev\\phaser\\trigger\\trigger_message_object.js",
            "line": 2,
            "description": "Object that is sent as parameter in a trigger callback function.\nThis is for showing the basic properties.",
            "is_constructor": 1
        },
        "UI.DialogBox": {
            "name": "UI.DialogBox",
            "shortname": "UI.DialogBox",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "UI",
            "file": "app\\shared\\js\\dev\\phaser\\ui\\dialog_box.js",
            "line": 3,
            "description": "Dialog box used by the Phaser.Plugin.DialogManager to display text\nIt creates a LR.Entity.Text and a LR.Entity.Sprite\nAttach this behaviour on a LR.Entity.Group",
            "is_constructor": 1,
            "params": [
                {
                    "name": "game",
                    "description": "",
                    "type": "Phaser.Game"
                }
            ]
        },
        "LR.Body": {
            "name": "LR.Body",
            "shortname": "LR.Body",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "LR",
            "file": "app\\shared\\js\\dev\\phaser\\body.js",
            "line": 3,
            "description": "The extended version of Phaser.Physics.P2.Body\nUsed for physics instead of Phaser.Physics.P2.Body",
            "is_constructor": 1,
            "params": [
                {
                    "name": "param_description",
                    "description": "",
                    "type": "_game"
                }
            ]
        },
        "LR.CollisionManager": {
            "name": "LR.CollisionManager",
            "shortname": "LR.CollisionManager",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "LR",
            "file": "app\\shared\\js\\dev\\phaser\\collision_manager.js",
            "line": 2,
            "description": "Holds the collision data between gameobjects in the game\nCreates collision groups according to layers\nAccess instance via game.collisionManager\n\nHow to use it :\n1) Call init method. The data asked is of this form :",
            "params": [
                {
                    "name": "game",
                    "description": "",
                    "type": "Phaser.Game"
                },
                {
                    "name": "UNKNOWN",
                    "description": "",
                    "type": "Object"
                }
            ]
        },
        "LR.Game": {
            "name": "LR.Game",
            "shortname": "LR.Game",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "LR",
            "file": "app\\shared\\js\\dev\\phaser\\game.js",
            "line": 2,
            "description": "Game class"
        },
        "LR.GameObject": {
            "name": "LR.GameObject",
            "shortname": "LR.GameObject",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "LR",
            "file": "app\\shared\\js\\dev\\phaser\\gameobject.js",
            "line": 2,
            "description": "Base object",
            "is_constructor": 1,
            "params": [
                {
                    "name": "LR",
                    "description": "entity",
                    "type": "LR.Sprite | LR.Group | LR.TileSprite"
                }
            ]
        },
        "LR.LevelExporter": {
            "name": "LR.LevelExporter",
            "shortname": "LR.LevelExporter",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "LR",
            "file": "app\\shared\\js\\dev\\phaser\\levelexporter.js",
            "line": 3,
            "description": "Export a level.",
            "is_constructor": 1
        },
        "LR.LevelImporter": {
            "name": "LR.LevelImporter",
            "shortname": "LR.LevelImporter",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "LR",
            "file": "app\\shared\\js\\dev\\phaser\\levelimporter.js",
            "line": 3,
            "description": "Import a level.",
            "is_constructor": 1
        },
        "LR.LevelImporterGame": {
            "name": "LR.LevelImporterGame",
            "shortname": "LR.LevelImporterGame",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "LR",
            "file": "app\\shared\\js\\dev\\phaser\\levelimportergame.js",
            "line": 3,
            "description": "Import a level for a game.",
            "is_constructor": 1
        },
        "LR.LevelUtilities": {
            "name": "LR.LevelUtilities",
            "shortname": "LR.LevelUtilities",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "LR",
            "file": "app\\shared\\js\\dev\\phaser\\levelutilities.js",
            "line": 3,
            "description": "Utilities for level import/export.",
            "is_constructor": 1
        },
        "LR.Utils": {
            "name": "LR.Utils",
            "shortname": "LR.Utils",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "LR",
            "file": "app\\shared\\js\\dev\\phaser\\utils.js",
            "line": 2,
            "description": "Misc Utilities",
            "is_constructor": 1
        },
        "LR.LR": {
            "name": "LR.LR",
            "shortname": "LR",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "LR",
            "file": "app\\shared\\js\\dev\\lr.js",
            "line": 3
        }
    },
    "classitems": [
        {
            "file": "app\\editor\\js\\dev\\angular\\controller_header.js",
            "line": 134,
            "description": "* PROJECT **",
            "class": "Editor.LevelImporterEditor"
        },
        {
            "file": "app\\editor\\js\\dev\\angular\\controller_header.js",
            "line": 185,
            "description": "* IMAGES **",
            "class": "Editor.LevelImporterEditor"
        },
        {
            "file": "app\\editor\\js\\dev\\angular\\controller_header.js",
            "line": 220,
            "description": "* ATLASES **",
            "class": "Editor.LevelImporterEditor"
        },
        {
            "file": "app\\editor\\js\\dev\\angular\\controller_header.js",
            "line": 253,
            "description": "* AUDIOS **",
            "class": "Editor.LevelImporterEditor"
        },
        {
            "file": "app\\editor\\js\\dev\\angular\\controller_header.js",
            "line": 286,
            "description": "* LAYERS **",
            "class": "Editor.LevelImporterEditor"
        },
        {
            "file": "app\\editor\\js\\dev\\angular\\controller_header.js",
            "line": 334,
            "description": "* BEHAVIOURS **",
            "class": "Editor.LevelImporterEditor"
        },
        {
            "file": "app\\editor\\js\\dev\\angular\\controller_header.js",
            "line": 368,
            "description": "* PREFABS **",
            "class": "Editor.LevelImporterEditor"
        },
        {
            "file": "app\\editor\\js\\dev\\angular\\controller_header.js",
            "line": 399,
            "description": "* FONTS **",
            "class": "Editor.LevelImporterEditor"
        },
        {
            "file": "app\\editor\\js\\dev\\angular\\controller_header.js",
            "line": 416,
            "description": "* LEVELS **",
            "class": "Editor.LevelImporterEditor"
        },
        {
            "file": "app\\editor\\js\\dev\\angular\\controller_header.js",
            "line": 443,
            "description": "* INPUTS **",
            "class": "Editor.LevelImporterEditor"
        },
        {
            "file": "app\\editor\\js\\dev\\angular\\controller_header.js",
            "line": 488,
            "description": "* ADDING ENTITIES **",
            "class": "Editor.LevelImporterEditor"
        },
        {
            "file": "app\\editor\\js\\dev\\angular\\controller_header.js",
            "line": 516,
            "description": "* LEVEL IMPORTER **",
            "class": "Editor.LevelImporterEditor"
        },
        {
            "file": "app\\editor\\js\\dev\\angular\\controller_header.js",
            "line": 550,
            "description": "* LEVEL EXPORTER **",
            "class": "Editor.LevelImporterEditor"
        },
        {
            "file": "app\\editor\\js\\dev\\angular\\controller_header.js",
            "line": 571,
            "description": "* LEVEL DEFAULT **",
            "class": "Editor.LevelImporterEditor"
        },
        {
            "file": "app\\editor\\js\\dev\\angular\\controller_header.js",
            "line": 592,
            "description": "* SETTINGS **",
            "class": "Editor.LevelImporterEditor"
        },
        {
            "file": "app\\editor\\js\\dev\\angular\\controller_header.js",
            "line": 611,
            "description": "* CUTSCENE EDITOR **",
            "class": "Editor.LevelImporterEditor"
        },
        {
            "file": "app\\editor\\js\\dev\\angular\\controller_header.js",
            "line": 645,
            "description": "******  HELP *******",
            "class": "Editor.LevelImporterEditor"
        },
        {
            "file": "app\\editor\\js\\dev\\phaser\\levelimportereditor.js",
            "line": 32,
            "description": "Import all the images",
            "itemtype": "method",
            "name": "importImages",
            "params": [
                {
                    "name": "images",
                    "description": "Images informations",
                    "type": "Object"
                },
                {
                    "name": "loader",
                    "description": "The loader used to import images",
                    "type": "Phaser.Loader"
                }
            ],
            "class": "Editor.LevelImporterEditor",
            "namespace": "Editor"
        },
        {
            "file": "app\\editor\\js\\dev\\phaser\\scrollerhorizontal.js",
            "line": 25,
            "description": "Update the camera according to the gameobject x position",
            "itemtype": "method",
            "name": "update",
            "class": "Behaviour.ScrollerHorizontal",
            "namespace": "Behaviour"
        },
        {
            "file": "app\\editor\\js\\dev\\phaser\\scrollervertical.js",
            "line": 25,
            "description": "Update the camera according to the gameobject y position",
            "itemtype": "method",
            "name": "update",
            "class": "Behaviour.LR.Editor.Behaviour.ScrollerVertical",
            "namespace": "Behaviour"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\behaviour\\common\\trigger.js",
            "line": 21,
            "description": "Interactive Layers that will trigger the callback. If empty, all layers can be interactives.\nNote that collision the trigger's layer and the interactives' one has to be active ( see CollisionManager)\nIn short, this is used to filter the layers that will trigger the message",
            "itemtype": "property",
            "name": "interactives",
            "type": "{Array}",
            "default": "Array",
            "class": "Behaviour.Trigger",
            "namespace": "Behaviour"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\behaviour\\common\\trigger.js",
            "line": 32,
            "description": "Function that will be called onto the colliding object",
            "itemtype": "property",
            "name": "callbackName",
            "type": "{string}",
            "default": "onTrigger",
            "class": "Behaviour.Trigger",
            "namespace": "Behaviour"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\behaviour\\common\\trigger.js",
            "line": 41,
            "description": "The message data we want to attach when we notify the gameobject it has hit the trigger.",
            "itemtype": "property",
            "name": "messageObject",
            "type": "{TriggerMessageObject}",
            "default": "Object instance",
            "class": "Behaviour.Trigger",
            "namespace": "Behaviour"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\behaviour\\common\\trigger.js",
            "line": 50,
            "description": "Tells how many times the trigger has been activated",
            "itemtype": "property",
            "name": "activeCount",
            "type": "Number",
            "default": "0",
            "class": "Behaviour.Trigger",
            "namespace": "Behaviour"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\behaviour\\common\\trigger.js",
            "line": 59,
            "description": "Defines how many times the trigger can be activated.\n0 is unlimited",
            "itemtype": "property",
            "name": "activeCountLimit",
            "type": "Number",
            "default": "-1",
            "class": "Behaviour.Trigger",
            "namespace": "Behaviour"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\behaviour\\common\\trigger.js",
            "line": 74,
            "description": "Creation data properties :\nmessageObject - If you want the message sent to the colliding GameObject to have custom properties,\n                put here an object containing these properties ie : _data.messageObject = { \"customProp\":\"hello\"}\ncallbackName - See property\ninteractives - See porperty",
            "itemtype": "method",
            "name": "create",
            "params": [
                {
                    "name": "data",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "Behaviour.Trigger",
            "namespace": "Behaviour"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\behaviour\\common\\trigger.js",
            "line": 145,
            "description": "Called when the trigger is activated and messages are triggered",
            "itemtype": "method",
            "name": "onTriggered",
            "params": [
                {
                    "name": "_gameobject",
                    "description": "Message's target (also the GameObject that collided with this trigger)",
                    "type": "LR.GameObject"
                }
            ],
            "class": "Behaviour.Trigger",
            "namespace": "Behaviour"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\behaviour\\common\\trigger_change_level.js",
            "line": 26,
            "description": "Creation data properties \nlevelName - name of the next level to load (if any)",
            "itemtype": "method",
            "name": "create",
            "params": [
                {
                    "name": "data",
                    "description": "Object containing properties to be assigned at the creation of the game",
                    "type": "Data"
                }
            ],
            "class": "Behaviour.TriggerChangeLevel",
            "namespace": "Behaviour"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\behaviour\\common\\trigger_cutscene.js",
            "line": 20,
            "description": "Cuscene name",
            "itemtype": "property",
            "name": "cutscene",
            "type": "string",
            "default": "null",
            "class": "Behaviour.TriggerCutscene",
            "namespace": "Behaviour"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\behaviour\\common\\trigger_cutscene.js",
            "line": 34,
            "description": "Creation data properties \ncutscene - name of the cutscene that has to be triggered",
            "itemtype": "method",
            "name": "create",
            "params": [
                {
                    "name": "data",
                    "description": "Object containing properties to be assigned at the creation of the game",
                    "type": "Data"
                }
            ],
            "class": "Behaviour.TriggerCutscene",
            "namespace": "Behaviour"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\behaviour\\behaviour.js",
            "line": 12,
            "description": "Enables the behaviour. A disabled behaviour will not have its start(),update(), render() and contacts function called by its GameObject",
            "itemtype": "property",
            "name": "enabled",
            "type": "{boolean}",
            "default": "true",
            "class": "LR.Behaviour",
            "namespace": "LR"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\behaviour\\behaviour.js",
            "line": 21,
            "description": "The GameObject this Behaviour is attached to",
            "itemtype": "property",
            "name": "gameobject",
            "type": "{GameObject}",
            "class": "LR.Behaviour",
            "namespace": "LR"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\behaviour\\behaviour.js",
            "line": 29,
            "description": "The Entity of the GameObject",
            "itemtype": "property",
            "name": "entity",
            "type": "{LR.Entity}",
            "class": "LR.Behaviour",
            "namespace": "LR"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\behaviour\\behaviour.js",
            "line": 37,
            "description": "Arguments to the behaviour. Must be used in Behaviour.create",
            "itemtype": "property",
            "name": "args",
            "type": "object",
            "default": "null",
            "class": "LR.Behaviour",
            "namespace": "LR"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\behaviour\\behaviour.js",
            "line": 46,
            "description": "If this property is set to false, the behaviours won't be noticed of contact events anymore\nie : onBeginContact and onEndContact will not be triggered",
            "itemtype": "property",
            "name": "enableEvents",
            "type": "boolean",
            "default": "true",
            "class": "LR.Behaviour",
            "namespace": "LR"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\behaviour\\behaviour.js",
            "line": 59,
            "description": "Called when all gameobjects are created",
            "itemtype": "method",
            "name": "create",
            "class": "LR.Behaviour",
            "namespace": "LR"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\behaviour\\behaviour.js",
            "line": 67,
            "description": "Called each frame if the behaviour is enabled",
            "itemtype": "method",
            "name": "update",
            "class": "LR.Behaviour",
            "namespace": "LR"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\behaviour\\behaviour.js",
            "line": 76,
            "description": "Called each frame after updaet() if the behaviour is enabled",
            "itemtype": "method",
            "name": "postUpdate",
            "class": "LR.Behaviour",
            "namespace": "LR"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\behaviour\\behaviour.js",
            "line": 89,
            "description": "Called when the scene is launching. All objects are created then.",
            "itemtype": "method",
            "name": "start",
            "class": "LR.Behaviour",
            "namespace": "LR"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\behaviour\\behaviour.js",
            "line": 97,
            "description": "Called when the GameObject is destroyed",
            "itemtype": "method",
            "name": "destroy",
            "class": "LR.Behaviour",
            "namespace": "LR"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\behaviour\\behaviour.js",
            "line": 105,
            "description": "Enable the behaviour",
            "itemtype": "method",
            "name": "enable",
            "class": "LR.Behaviour",
            "namespace": "LR"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\behaviour\\behaviour.js",
            "line": 114,
            "description": "Disable the behaviour. A disabled behaviour won't have his update function called anymore",
            "itemtype": "method",
            "name": "disable",
            "class": "LR.Behaviour",
            "namespace": "LR"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\behaviour\\behaviour.js",
            "line": 123,
            "description": "Called when a body collision just begins",
            "itemtype": "method",
            "name": "onBeginContact",
            "params": [
                {
                    "name": "_otherBody",
                    "description": "",
                    "type": "_otherBody"
                },
                {
                    "name": "_myShape",
                    "description": "",
                    "type": "_myShape"
                },
                {
                    "name": "_otherShape",
                    "description": "",
                    "type": "_otherShape"
                },
                {
                    "name": "_equation",
                    "description": "",
                    "type": "_equation"
                }
            ],
            "class": "LR.Behaviour",
            "namespace": "LR"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\behaviour\\behaviour.js",
            "line": 140,
            "description": "Called when a body collision just ends",
            "itemtype": "method",
            "name": "onEndContact",
            "params": [
                {
                    "name": "_otherBody",
                    "description": "",
                    "type": "_otherBody"
                },
                {
                    "name": "_myShape",
                    "description": "",
                    "type": "_myShape"
                },
                {
                    "name": "_otherShape",
                    "description": "",
                    "type": "_otherShape"
                },
                {
                    "name": "_equation",
                    "description": "",
                    "type": "_equation"
                }
            ],
            "class": "LR.Behaviour",
            "namespace": "LR"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\behaviour\\behaviour.js",
            "line": 156,
            "description": "Called when a cutscene begins",
            "itemtype": "method",
            "name": "onBeginCutscene",
            "class": "LR.Behaviour",
            "namespace": "LR"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\behaviour\\behaviour.js",
            "line": 165,
            "description": "Called when a cutscene ends",
            "itemtype": "method",
            "name": "onEndCutscene",
            "class": "LR.Behaviour",
            "namespace": "LR"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\behaviour\\behaviour.js",
            "line": 178,
            "description": "Called when the entity enters the camera view",
            "itemtype": "method",
            "name": "onShow",
            "class": "LR.Behaviour",
            "namespace": "LR"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\behaviour\\behaviour.js",
            "line": 186,
            "description": "Called when the entity quit the camera view",
            "itemtype": "method",
            "name": "onHide",
            "class": "LR.Behaviour",
            "namespace": "LR"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\behaviour\\behaviour.js",
            "line": 196,
            "description": "Accessor to the GameObject's x property",
            "itemtype": "property",
            "name": "x",
            "type": "Number",
            "class": "LR.Behaviour",
            "namespace": "LR"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\behaviour\\behaviour.js",
            "line": 215,
            "description": "Accessor to the GameObject's y property",
            "itemtype": "property",
            "name": "x",
            "type": "Number",
            "class": "LR.Behaviour",
            "namespace": "LR"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\behaviour\\behaviour.js",
            "line": 233,
            "description": "Accessor to the entity's world coordinates property (readonly)",
            "itemtype": "property",
            "name": "world",
            "type": "{Phaser.Point}",
            "class": "LR.Behaviour",
            "namespace": "LR"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\behaviour\\behaviour.js",
            "line": 248,
            "description": "Accessor to the current game (readonly)",
            "itemtype": "property",
            "name": "game",
            "type": "Number",
            "class": "LR.Behaviour",
            "namespace": "LR"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\behaviour\\behaviour.js",
            "line": 262,
            "description": "Accessor to the current gameobject's body (readonly)",
            "itemtype": "property",
            "name": "body",
            "type": "LR.Body",
            "class": "LR.Behaviour",
            "namespace": "LR"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\behaviour\\behaviour.js",
            "line": 276,
            "description": "Find an instance of a specific Behaviour held by a gameobject",
            "itemtype": "method",
            "name": "FindBehaviour",
            "params": [
                {
                    "name": "root",
                    "description": "Root of the search",
                    "type": "Phaser.World | Phaser.Group | Phaser.Sprite"
                },
                {
                    "name": "Behaviour's",
                    "description": "class",
                    "type": "Class"
                }
            ],
            "return": {
                "description": "Found gameobject",
                "type": "GameObject"
            },
            "class": "LR.Behaviour",
            "namespace": "LR"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\behaviour\\button.js",
            "line": 22,
            "description": "Called when the button entity is clicked",
            "itemtype": "method",
            "name": "onClick",
            "class": "Behaviour.Button",
            "namespace": "Behaviour"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\entity\\bitmap_text.js",
            "line": 29,
            "description": "String to apply before the text",
            "itemtype": "property",
            "name": "prefix",
            "type": "{string}",
            "default": "\"\"",
            "class": "Entity.BitmapText",
            "namespace": "Entity"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\entity\\bitmap_text.js",
            "line": 37,
            "description": "String to apply after the text",
            "itemtype": "property",
            "name": "suffix",
            "type": "{string}",
            "default": "\"\"",
            "class": "Entity.BitmapText",
            "namespace": "Entity"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\entity\\bitmap_text.js",
            "line": 46,
            "description": "The context of the bounded variable ( if any )",
            "itemtype": "property",
            "name": "boundContext",
            "type": "{Object}",
            "default": "null",
            "class": "Entity.BitmapText",
            "namespace": "Entity"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\entity\\bitmap_text.js",
            "line": 55,
            "description": "The name of the variable bound to this entity. \nThe value of this variable will be displayed in this text, using prefix and suffix if they are set\n\nSet to null to stop listening to a variable",
            "itemtype": "property",
            "name": "boundVariable",
            "type": "{string}",
            "default": "null",
            "class": "Entity.BitmapText",
            "namespace": "Entity"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\entity\\bitmap_text.js",
            "line": 67,
            "description": "Defines the fixed count of digit you want if the text holds a number\nie : with numberPadding == 3 , 6 will be displayed as \"006\"\n\na value of 0 deactivates the padding",
            "itemtype": "property",
            "name": "numberPadding",
            "type": "number",
            "default": "0",
            "class": "Entity.BitmapText",
            "namespace": "Entity"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\entity\\bitmap_text.js",
            "line": 78,
            "description": "Maximum number of characters on a line\na value of 0 deactivates the wrapping",
            "itemtype": "property",
            "name": "maxCharPerLine",
            "type": "number",
            "default": "0",
            "class": "Entity.BitmapText",
            "namespace": "Entity"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\entity\\bitmap_text.js",
            "line": 108,
            "description": "The defineProperty is overrided to enable auto number padding, prefix and suffix.",
            "name": "text - The text string to be displayed by this BitmapText object, taking into account the style settings.",
            "itemtype": "property",
            "type": "String",
            "class": "Entity.BitmapText",
            "namespace": "Entity"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\entity\\bitmap_text.js",
            "line": 185,
            "description": "Tells this text entity to display the specified variable.\nThis will be effective even if the variable value changes.",
            "itemtype": "method",
            "name": "bindToVariable",
            "params": [
                {
                    "name": "variableName",
                    "description": "The name of the variable to bind",
                    "type": "String"
                },
                {
                    "name": "context",
                    "description": "The context holding the variable",
                    "type": "Object"
                },
                {
                    "name": "prefix",
                    "description": "String to apply before the variable value",
                    "type": "String"
                },
                {
                    "name": "suffix",
                    "description": "String to apply after the variable value",
                    "type": "String"
                }
            ],
            "class": "Entity.BitmapText",
            "namespace": "Entity"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\entity\\button.js",
            "line": 77,
            "description": "call behaviours onClick function",
            "itemtype": "method",
            "name": "onClick",
            "class": "Entity.Button",
            "namespace": "Entity"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\entity\\button.js",
            "line": 94,
            "description": "call behaviours onUp function",
            "itemtype": "method",
            "name": "onUp",
            "class": "Entity.Button",
            "namespace": "Entity"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\entity\\button.js",
            "line": 111,
            "description": "call behaviours onDown function",
            "itemtype": "method",
            "name": "onDown",
            "class": "Entity.Button",
            "namespace": "Entity"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\entity\\button.js",
            "line": 128,
            "description": "call behaviours onOver function",
            "itemtype": "method",
            "name": "onDown",
            "class": "Entity.Button",
            "namespace": "Entity"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\entity\\button.js",
            "line": 145,
            "description": "call behaviours onOver function",
            "itemtype": "method",
            "name": "onDown",
            "class": "Entity.Button",
            "namespace": "Entity"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\entity\\sprite.js",
            "line": 28,
            "description": "Tells if the sprite is actually hidden. Set outOfViewHide to true to enable this option.",
            "itemtype": "property",
            "name": "hidden",
            "type": "boolean",
            "default": "false",
            "class": "Entity.Sprite",
            "namespace": "Entity"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\entity\\sprite.js",
            "line": 36,
            "description": "Enable sprite to be hidden when out of the camera view.\nEach time a sprite is hidden/shown, the callback onHide/onShow are called onto GameObject\nCreate this methods in the behaviours on the object to get this events ( ie : Behaviour.prototype.onHide = function(){})",
            "itemtype": "property",
            "name": "outOfViewHide",
            "type": "boolean",
            "default": "false",
            "class": "Entity.Sprite",
            "namespace": "Entity"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\entity\\text.js",
            "line": 31,
            "description": "String to apply before the text",
            "itemtype": "property",
            "name": "prefix",
            "type": "{string}",
            "default": "\"\"",
            "class": "Entity.Text",
            "namespace": "Entity"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\entity\\text.js",
            "line": 39,
            "description": "String to apply after the text",
            "itemtype": "property",
            "name": "suffix",
            "type": "{string}",
            "default": "\"\"",
            "class": "Entity.Text",
            "namespace": "Entity"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\entity\\text.js",
            "line": 48,
            "description": "The context of the bounded variable ( if any )",
            "itemtype": "property",
            "name": "boundContext",
            "type": "{Object}",
            "default": "null",
            "class": "Entity.Text",
            "namespace": "Entity"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\entity\\text.js",
            "line": 57,
            "description": "The name of the variable bound to this entity. \nThe value of this variable will be displayed in this text, using prefix and suffix if they are set\n\nSet to null to stop listening to a variable",
            "itemtype": "property",
            "name": "boundVariable",
            "type": "{string}",
            "default": "null",
            "class": "Entity.Text",
            "namespace": "Entity"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\entity\\text.js",
            "line": 69,
            "description": "FDfines the fixed count of digit you want if the text holds a number\nie : with numberPadding == 3 , 6 will be displayed as \"006\"\n\na value of 0 deactivates the padding",
            "itemtype": "property",
            "name": "numberPadding",
            "type": "number",
            "default": "0",
            "class": "Entity.Text",
            "namespace": "Entity"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\entity\\text.js",
            "line": 84,
            "description": "The defineProperty is overrided to enable auto number padding, prefix and suffix.",
            "name": "text - The text string to be displayed by this Text object, taking into account the style settings.",
            "itemtype": "property",
            "type": "String",
            "class": "Entity.Text",
            "namespace": "Entity"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\entity\\text.js",
            "line": 156,
            "description": "Tells this text entity to display the specified variable.\nThis will be effective even if the variable value changes.",
            "itemtype": "method",
            "name": "bindToVariable",
            "params": [
                {
                    "name": "variableName",
                    "description": "The name of the variable to bind",
                    "type": "String"
                },
                {
                    "name": "context",
                    "description": "The context holding the variable",
                    "type": "Object"
                },
                {
                    "name": "prefix",
                    "description": "String to apply before the variable value",
                    "type": "String"
                },
                {
                    "name": "suffix",
                    "description": "String to apply after the variable value",
                    "type": "String"
                }
            ],
            "class": "Entity.Text",
            "namespace": "Entity"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\entity\\tilesprite.js",
            "line": 33,
            "description": "Tells if the sprite is actually hidden. Set outOfViewHide to true to enable this option.",
            "itemtype": "property",
            "name": "hidden",
            "type": "boolean",
            "default": "false",
            "class": "Entity.TileSprite",
            "namespace": "Entity"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\entity\\tilesprite.js",
            "line": 41,
            "description": "Enable sprite to be hidden when out of the camera view.\nEach time a sprite is hidden/shown, the callback onHide/onShow are called onto GameObject\nCreate this methods in the behaviours on the object to get this events ( ie : Behaviour.prototype.onHide = function(){})",
            "itemtype": "property",
            "name": "outOfViewHide",
            "type": "boolean",
            "default": "false",
            "class": "Entity.TileSprite",
            "namespace": "Entity"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\plugin\\cutscene_manager.js",
            "line": 135,
            "description": "Called when an action of the current event has finished",
            "class": "Phaser.Plugin.CutsceneManager",
            "namespace": "Phaser.Plugin"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\plugin\\cutscene_manager.js",
            "line": 195,
            "description": "Tween properties can be composite. By example, if we have a property like \"body.x\", the tween\nactually acts on the body itself as a target, not the entity.\nSo we have to manually parse the properties and create the tween on the right objects.",
            "class": "Phaser.Plugin.CutsceneManager",
            "namespace": "Phaser.Plugin"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\plugin\\cutscene_manager.js",
            "line": 237,
            "description": "Creates a tween for the targeted object and start it",
            "class": "Phaser.Plugin.CutsceneManager",
            "namespace": "Phaser.Plugin"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\plugin\\cutscene_manager.js",
            "line": 259,
            "description": "Calls a function on the _target GameObject",
            "class": "Phaser.Plugin.CutsceneManager",
            "namespace": "Phaser.Plugin"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\plugin\\cutscene_manager.js",
            "line": 282,
            "description": "This function returns the target object of the tween property defined by the string\nie : if string = \"body.x\"\nthe return value will be the body property of the object\nIf a property is not found, the object is returned as itself\nexample of returned object :\n{ targetObject : P2.Body... , property : \"x\"}",
            "class": "Phaser.Plugin.CutsceneManager",
            "namespace": "Phaser.Plugin"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\plugin\\cutscene_manager.js",
            "line": 315,
            "description": "This is an array that can be used to know which functions can be called as \"other\"\nThis will mostly be used by the editor",
            "class": "Phaser.Plugin.CutsceneManager",
            "namespace": "Phaser.Plugin"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\plugin\\input_manager.js",
            "line": 53,
            "description": "Init all the keys binding and mouse events",
            "itemtype": "method",
            "name": "init",
            "params": [
                {
                    "name": "keysData",
                    "description": "See common usage in the class description",
                    "type": "Object"
                }
            ],
            "class": "Phaser.Plugin.InputManager",
            "namespace": "Phaser.Plugin"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\plugin\\input_manager.js",
            "line": 79,
            "description": "Creates an action key data and add it to the input manager\nie : createActionKey(\"valid\", Phaser.Keyboard.SPACEBAR,false);",
            "itemtype": "method",
            "name": "createActionKey",
            "params": [
                {
                    "name": "actionName",
                    "description": "The name of the action key",
                    "type": "String"
                },
                {
                    "name": "key",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "capture",
                    "description": "Should this key still be listen by the browser. null is true.",
                    "type": "Boolean"
                }
            ],
            "class": "Phaser.Plugin.InputManager",
            "namespace": "Phaser.Plugin"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\plugin\\input_manager.js",
            "line": 169,
            "description": "Binds a callback to the mouse left press event",
            "itemtype": "method",
            "name": "bindMousePress",
            "params": [
                {
                    "name": "callback",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "context",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "button",
                    "description": "Phaser.Mouse.[LEFT_BUTTON,RIGHT_BUTTON,MIDDLE_BUTTON]",
                    "type": "Number"
                },
                {
                    "name": "priority",
                    "description": "The priority of the callback",
                    "type": "Number"
                }
            ],
            "class": "Phaser.Plugin.InputManager",
            "namespace": "Phaser.Plugin"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\plugin\\input_manager.js",
            "line": 196,
            "description": "Binds a callback to the mouse left release event",
            "itemtype": "method",
            "name": "bindMousePress",
            "params": [
                {
                    "name": "callback",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "context",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "button",
                    "description": "Phaser.Mouse.[LEFT_BUTTON,RIGHT_BUTTON,MIDDLE_BUTTON]",
                    "type": "Number"
                },
                {
                    "name": "priority",
                    "description": "The priority of the callback",
                    "type": "Number"
                }
            ],
            "class": "Phaser.Plugin.InputManager",
            "namespace": "Phaser.Plugin"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\plugin\\input_manager.js",
            "line": 222,
            "description": "Binds a callback to the mouse wheel event. \nThe callback should have an object in its parameter. It contains a delta property corresponding to the direction of the mousewheel",
            "itemtype": "method",
            "name": "bindMouseWheel",
            "params": [
                {
                    "name": "callback",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "context",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "priority",
                    "description": "The priority of the callback",
                    "type": "Number"
                }
            ],
            "class": "Phaser.Plugin.InputManager",
            "namespace": "Phaser.Plugin"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\plugin\\input_manager.js",
            "line": 247,
            "description": "Binds a key to the manager. The _functionBinded will be triggered on the _callbackContext when the key bound to the _actionInputName is pressed\nNote that the function binded can expect a Phaser.Key parameter",
            "itemtype": "method",
            "name": "bindKeyPress",
            "params": [
                {
                    "name": "actionInputName",
                    "description": "The action we want to bind to",
                    "type": "String"
                },
                {
                    "name": "functionBinded",
                    "description": "The function that will be called when the action is performed",
                    "type": "Function"
                },
                {
                    "name": "callbackContext",
                    "description": "The context of the function",
                    "type": "Object"
                },
                {
                    "name": "priority",
                    "description": "Priority of the callback. See enablePriority for more details",
                    "type": "Number"
                }
            ],
            "class": "Phaser.Plugin.InputManager",
            "namespace": "Phaser.Plugin"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\plugin\\input_manager.js",
            "line": 273,
            "description": "Binds a key to the manager. The _functionBinded will be triggered on the _callbackContext when the key bound to the _actionInputName is pressed\nNote that the function binded can expect a Phaser.Key parameter",
            "itemtype": "method",
            "name": "bindKeyUp",
            "params": [
                {
                    "name": "actionInputName",
                    "description": "The action we want to bind to",
                    "type": "String"
                },
                {
                    "name": "functionBinded",
                    "description": "The function that will be called when the action is performed",
                    "type": "Function"
                },
                {
                    "name": "callbackContext",
                    "description": "The context of the function",
                    "type": "Object"
                },
                {
                    "name": "priority",
                    "description": "Priority of the callback. See enablePriority for more details",
                    "type": "Number"
                }
            ],
            "class": "Phaser.Plugin.InputManager",
            "namespace": "Phaser.Plugin"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\plugin\\input_manager.js",
            "line": 377,
            "description": "Freezes all the inputs",
            "itemtype": "method",
            "name": "freezeInputAll",
            "class": "Phaser.Plugin.InputManager",
            "namespace": "Phaser.Plugin"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\plugin\\input_manager.js",
            "line": 390,
            "description": "Unfreezes all the inputs",
            "itemtype": "method",
            "name": "unfreezeInputAll",
            "class": "Phaser.Plugin.InputManager",
            "namespace": "Phaser.Plugin"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\plugin\\input_manager.js",
            "line": 402,
            "description": "Freezes the input keys for the specified action",
            "itemtype": "method",
            "name": "freezeInputKeys",
            "params": [
                {
                    "name": "actionNames",
                    "description": "ie [\"valid\",\"cancel\"]",
                    "type": "_actionNames"
                }
            ],
            "class": "Phaser.Plugin.InputManager",
            "namespace": "Phaser.Plugin"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\plugin\\input_manager.js",
            "line": 417,
            "description": "Unfreezes the input keys for the specified action",
            "itemtype": "method",
            "name": "unfreezeInputKeys",
            "params": [
                {
                    "name": "actionNames",
                    "description": "ie [\"valid\",\"cancel\"]",
                    "type": "_actionNames"
                }
            ],
            "class": "Phaser.Plugin.InputManager",
            "namespace": "Phaser.Plugin"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\plugin\\input_manager.js",
            "line": 432,
            "description": "Freezes the mouse input for the specified buttons",
            "itemtype": "method",
            "name": "freezeInputMouse",
            "params": [
                {
                    "name": "buttons",
                    "description": "ie : [ Phaser.MOUSE.LEFT_BUTTON ]",
                    "type": "_buttons"
                }
            ],
            "class": "Phaser.Plugin.InputManager",
            "namespace": "Phaser.Plugin"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\plugin\\input_manager.js",
            "line": 446,
            "description": "Unfreezes the mouse input for the specified buttons",
            "itemtype": "method",
            "name": "unfreezeInputMouse",
            "params": [
                {
                    "name": "buttons",
                    "description": "ie : [ Phaser.MOUSE.LEFT_BUTTON ]",
                    "type": "_buttons"
                }
            ],
            "class": "Phaser.Plugin.InputManager",
            "namespace": "Phaser.Plugin"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\plugin\\input_manager.js",
            "line": 469,
            "description": "Resiter a button so that it will block any mouse input if the action is donw on this\nsame button.\nFor example, if your button is clicked, it will override any other callback bound in \nthe InputManager via boundMousePress and bindMouseRelease",
            "itemtype": "method",
            "name": "registerButton",
            "params": [
                {
                    "name": "button",
                    "description": "",
                    "type": "LR.Entity.Button"
                }
            ],
            "class": "Phaser.Plugin.InputManager",
            "namespace": "Phaser.Plugin"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\plugin\\input_manager.js",
            "line": 482,
            "description": "Returns true is a registered button is down",
            "itemtype": "method",
            "name": "isRegisteredButtonDown",
            "return": {
                "description": "wheter a button is down or not"
            },
            "class": "Phaser.Plugin.InputManager",
            "namespace": "Phaser.Plugin"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\plugin\\input_manager.js",
            "line": 499,
            "description": "Returns true is a registered button is overed by an input",
            "itemtype": "method",
            "name": "isRegisteredButtonOvered",
            "return": {
                "description": "wheter a button is down or not"
            },
            "class": "Phaser.Plugin.InputManager",
            "namespace": "Phaser.Plugin"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\plugin\\player_save.js",
            "line": 33,
            "description": "Sets the value in the save",
            "params": [
                {
                    "name": "key",
                    "description": "Name of the variable"
                },
                {
                    "name": "value",
                    "description": "The value to store"
                }
            ],
            "itemtype": "method",
            "name": "setValue",
            "class": "Phaser.Plugin.PlayerSave",
            "namespace": "Phaser.Plugin"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\plugin\\player_save.js",
            "line": 44,
            "description": "Gets the value in the save",
            "params": [
                {
                    "name": "key",
                    "description": "Name of the variable"
                }
            ],
            "itemtype": "method",
            "name": "getValue",
            "class": "Phaser.Plugin.PlayerSave",
            "namespace": "Phaser.Plugin"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\plugin\\player_save.js",
            "line": 54,
            "description": "Write the single data into localStorage. The value written will be the temporary one.\nBe aware that arrays and objects are not supported by local storage. You need to stringify them",
            "params": [
                {
                    "name": "key",
                    "description": "Name of the variable"
                }
            ],
            "itemtype": "method",
            "name": "writeValue",
            "class": "Phaser.Plugin.PlayerSave",
            "namespace": "Phaser.Plugin"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\plugin\\player_save.js",
            "line": 67,
            "description": "Write the save.",
            "itemtype": "method",
            "name": "writeSave",
            "class": "Phaser.Plugin.PlayerSave",
            "namespace": "Phaser.Plugin"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\plugin\\player_save.js",
            "line": 80,
            "description": "Returns the current save for the actual game.\nThis actually returns the temporary save. Use writeSave to apply changes to the overall game save\nUse getPersistentSave to access persistent data",
            "itemtype": "method",
            "name": "getSave",
            "class": "Phaser.Plugin.PlayerSave",
            "namespace": "Phaser.Plugin"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\plugin\\player_save.js",
            "line": 90,
            "description": "Returns the current persistent save. This data is unchanged until you apply (write) the temporary save",
            "itemtype": "method",
            "name": "getPermanentSave",
            "class": "Phaser.Plugin.PlayerSave",
            "namespace": "Phaser.Plugin"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\plugin\\player_save.js",
            "line": 98,
            "description": "Creates a new save for the given level",
            "itemtype": "method",
            "name": "createLevelSave",
            "return": {
                "description": "the level save",
                "type": "Object"
            },
            "class": "Phaser.Plugin.PlayerSave",
            "namespace": "Phaser.Plugin"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\plugin\\player_save.js",
            "line": 109,
            "description": "Returns the save for the specified level\nIf none provided, returns the save for the current one",
            "itemtype": "method",
            "name": "getLevelSave",
            "params": [
                {
                    "name": "levelName",
                    "description": "Name of the level save"
                }
            ],
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "Phaser.Plugin.PlayerSave",
            "namespace": "Phaser.Plugin"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\plugin\\player_save.js",
            "line": 124,
            "description": "Returns the save previously activated for the specified level",
            "itemtype": "method",
            "name": "getActiveLevelSave",
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "Phaser.Plugin.PlayerSave",
            "namespace": "Phaser.Plugin"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\plugin\\player_save.js",
            "line": 134,
            "description": "Activate a level save. By doing this, you may get the current active level save using getActiveLevelSave.\nThis doesn't affect the save whatsoever, it's just a tools for a quick access \n( if you have a level with many sublevels for example, you can gather all the data in only one level save)",
            "itemtype": "method",
            "name": "activateLevelSave",
            "params": [
                {
                    "name": "levelName",
                    "description": "Name of the level in the save"
                }
            ],
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "Phaser.Plugin.PlayerSave",
            "namespace": "Phaser.Plugin"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\plugin\\player_save.js",
            "line": 147,
            "description": "Revert the save for the current level",
            "itemtype": "method",
            "name": "revertLevelSave",
            "class": "Phaser.Plugin.PlayerSave",
            "namespace": "Phaser.Plugin"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\plugin\\player_save.js",
            "line": 157,
            "description": "Delete save. This deletes even the stored save of the game.",
            "itemtype": "method",
            "name": "deleteSave",
            "class": "Phaser.Plugin.PlayerSave",
            "namespace": "Phaser.Plugin"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\plugin\\pollinator.js",
            "line": 3,
            "author": "LadybugRiders",
            "class": "Phaser.Plugin..Pollinator",
            "namespace": "Phaser.Plugin"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\plugin\\pollinator.js",
            "line": 43,
            "description": "Map a callback on an event",
            "itemtype": "method",
            "name": "on",
            "params": [
                {
                    "name": "key",
                    "description": "Event's name",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "Function to be called when the event occurs",
                    "type": "Function"
                }
            ],
            "optional": "{object} callbackContext Callback's context",
            "class": "Phaser.Plugin..Pollinator",
            "namespace": "Phaser.Plugin"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\plugin\\pollinator.js",
            "line": 61,
            "description": "Unmap a callback on an event",
            "itemtype": "method",
            "name": "off",
            "params": [
                {
                    "name": "key",
                    "description": "Event's name",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "Function to be called when the event occurs",
                    "type": "Function"
                }
            ],
            "optional": "{object} callbackContext Callback's context",
            "class": "Phaser.Plugin..Pollinator",
            "namespace": "Phaser.Plugin"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\plugin\\pollinator.js",
            "line": 89,
            "description": "Dispatch an event to all callback related to it",
            "itemtype": "method",
            "name": "dispatch",
            "params": [
                {
                    "name": "key",
                    "description": "Event's name",
                    "type": "String"
                }
            ],
            "optional": "{object} args Parameters to send to callbacks",
            "class": "Phaser.Plugin..Pollinator",
            "namespace": "Phaser.Plugin"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\plugin\\pollinator.js",
            "line": 111,
            "description": "Destroy the instance of Pollinator",
            "itemtype": "method",
            "name": "destroy",
            "class": "Phaser.Plugin..Pollinator",
            "namespace": "Phaser.Plugin"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\states\\state.js",
            "line": 12,
            "description": "Array of GameObjects added to this state",
            "itemtype": "property",
            "name": "gameobjects",
            "type": "{Array}",
            "default": "Array",
            "class": "LR.State",
            "namespace": "LR"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\states\\state.js",
            "line": 31,
            "description": "Adds a GameObject to this state",
            "itemtype": "method",
            "name": "addGameObject",
            "params": [
                {
                    "name": "gameobject",
                    "description": "The GameObject to add",
                    "type": "LR.GameObject"
                },
                {
                    "name": "addToGame",
                    "description": "If this method should add the entity of the GameObject to the game",
                    "type": "Boolean"
                },
                {
                    "name": "enableEvents",
                    "description": "Enable events from CollisionManager",
                    "type": "Boolean"
                }
            ],
            "class": "LR.State",
            "namespace": "LR"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\states\\state.js",
            "line": 53,
            "description": "Adds a GameObject to this state, to the game and to the CollisionManager",
            "itemtype": "method",
            "name": "addGameObjectFull",
            "params": [
                {
                    "name": "gameobject",
                    "description": "The GameObject to add",
                    "type": "LR.GameObject"
                }
            ],
            "class": "LR.State",
            "namespace": "LR"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\states\\state.js",
            "line": 63,
            "description": "Return the GameObject of the current state with the name specified",
            "itemtype": "method",
            "name": "findGameObjectByName",
            "params": [
                {
                    "name": "name",
                    "description": "Name of the wanted GameObject",
                    "type": "String"
                }
            ],
            "class": "LR.State",
            "namespace": "LR"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\states\\state.js",
            "line": 80,
            "description": "Return the GameObject of the current state with the name specified",
            "itemtype": "method",
            "name": "getGameObjectByName",
            "params": [
                {
                    "name": "name",
                    "description": "Name of the wanted GameObject",
                    "type": "String"
                }
            ],
            "class": "LR.State",
            "namespace": "LR"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\states\\state.js",
            "line": 97,
            "description": "Return the GameObject of the current state with the id specified",
            "itemtype": "method",
            "name": "findGameObjectByID",
            "params": [
                {
                    "name": "name",
                    "description": "Name of the wanted GameObject",
                    "type": "String"
                }
            ],
            "class": "LR.State",
            "namespace": "LR"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\trigger\\trigger_message_object.js",
            "line": 11,
            "description": "The GameObject holding the Trigger behaviour. Basically the sender of the message.",
            "itemtype": "property",
            "name": "sender",
            "type": "{GameObject}",
            "default": "null",
            "class": "Misc.TriggerMessageObject",
            "namespace": "Misc"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\trigger\\trigger_message_object.js",
            "line": 19,
            "description": "The shape of the sender that is in contact with the target's body",
            "itemtype": "property",
            "name": "senderShape",
            "type": "{P2.Shape}",
            "default": "null",
            "class": "Misc.TriggerMessageObject",
            "namespace": "Misc"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\trigger\\trigger_message_object.js",
            "line": 27,
            "description": "The shape of the body's target that is colliding with the sender's body",
            "itemtype": "property",
            "name": "collShape",
            "type": "{P2.Shape}",
            "default": "null",
            "class": "Misc.TriggerMessageObject",
            "namespace": "Misc"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\trigger\\trigger_message_object.js",
            "line": 35,
            "description": "The contact equation of the collision",
            "itemtype": "property",
            "name": "equation",
            "type": "{P2.ContactEquation}",
            "default": "null",
            "class": "Misc.TriggerMessageObject",
            "namespace": "Misc"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\ui\\dialog_box.js",
            "line": 86,
            "description": "This creates a default dialog box at the top of the screen, fixed to camera",
            "class": "UI.DialogBox",
            "namespace": "UI"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\body.js",
            "line": 13,
            "description": "The local position of the body in its parent reference",
            "itemtype": "property",
            "name": "localPosition",
            "type": "{Phaser.Point}",
            "class": "LR.Body",
            "namespace": "LR"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\body.js",
            "line": 106,
            "description": "The local x coordinate of the body",
            "itemtype": "property",
            "name": "x",
            "type": "{Number}",
            "class": "LR.Body",
            "namespace": "LR"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\body.js",
            "line": 125,
            "description": "The local y coordinate of the body",
            "itemtype": "property",
            "name": "y",
            "type": "{Number}",
            "class": "LR.Body",
            "namespace": "LR"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\body.js",
            "line": 158,
            "description": "The world x coordinate of the body",
            "itemtype": "property",
            "name": "worldX",
            "type": "{Number}",
            "class": "LR.Body",
            "namespace": "LR"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\body.js",
            "line": 180,
            "description": "The world y coordinate of the body",
            "itemtype": "property",
            "name": "worldY",
            "type": "{Number}",
            "class": "LR.Body",
            "namespace": "LR"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\body.js",
            "line": 200,
            "description": "Tells if the sprite can rotate indepently from its body",
            "itemtype": "property",
            "name": "bindRotation",
            "type": "boolean",
            "default": "false",
            "class": "LR.Body",
            "namespace": "LR"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\body.js",
            "line": 227,
            "description": "The bottom ( highest y shape value ) of the body in the world",
            "itemtype": "property",
            "name": "bottom",
            "type": "number",
            "class": "LR.Body",
            "namespace": "LR"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\body.js",
            "line": 241,
            "description": "The top ( lowest y shape value ) of the body in the world",
            "itemtype": "property",
            "name": "top",
            "type": "number",
            "class": "LR.Body",
            "namespace": "LR"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\body.js",
            "line": 255,
            "description": "The left ( lowest x shape value ) of the body in the world",
            "itemtype": "property",
            "name": "left",
            "type": "number",
            "class": "LR.Body",
            "namespace": "LR"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\body.js",
            "line": 269,
            "description": "The right ( highest x shape value ) of the body in the world",
            "itemtype": "property",
            "name": "right",
            "type": "number",
            "class": "LR.Body",
            "namespace": "LR"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\collision_manager.js",
            "line": 19,
            "description": "Object containing data of layers ( as the CollisionGroup for example )",
            "itemtype": "property",
            "name": "layersData",
            "class": "LR.CollisionManager",
            "namespace": "LR"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\collision_manager.js",
            "line": 30,
            "description": "Creates CollisionGroups according to the layer data",
            "itemtype": "method",
            "name": "init",
            "params": [
                {
                    "name": "layersObjectData",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "LR.CollisionManager",
            "namespace": "LR"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\collision_manager.js",
            "line": 45,
            "description": "Adds a layer, creating a collision group\nYou're advised to use the init function instead",
            "itemtype": "method",
            "name": "addLayer",
            "params": [
                {
                    "name": "layerName",
                    "description": "Name of the new layer",
                    "type": "String"
                }
            ],
            "return": {
                "description": "the ID of the created layer",
                "type": "Number"
            },
            "class": "LR.CollisionManager",
            "namespace": "LR"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\collision_manager.js",
            "line": 68,
            "description": "Adds an entity to the collision management of the game.\nFiltered according to its layer",
            "itemtype": "method",
            "name": "addGameObject",
            "params": [
                {
                    "name": "entity",
                    "description": "",
                    "type": "Entity"
                },
                {
                    "name": "enableEvents",
                    "description": "Set to true if you want callbacks about collision events to be forwarded to the gameobject's behaviours",
                    "type": "Boolean"
                }
            ],
            "class": "LR.CollisionManager",
            "namespace": "LR"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\collision_manager.js",
            "line": 85,
            "description": "Changes the GameObject collisions groups accroding to the specified layer",
            "itemtype": "method",
            "name": "changeGameObjectLayer",
            "params": [
                {
                    "name": "gameobject",
                    "description": "",
                    "type": "GameObject"
                },
                {
                    "name": "layer",
                    "description": "Name of the new layer (check PhysicsSettings)",
                    "type": "String"
                }
            ],
            "class": "LR.CollisionManager",
            "namespace": "LR"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\collision_manager.js",
            "line": 128,
            "description": "Called before allowing collision between two bodies. By returning true, you allow a collision to happen.\nThis is called for a pair\nie if onPostBroadphase( player , enemy1) is called, onPostBroadphase( enemy1, player) won't be called\n\nIf you want to be able to process this phase, use setPostBroadPhaseCallback(callback,context) on your GameObject",
            "itemtype": "method",
            "name": "onPostBroadphase",
            "params": [
                {
                    "name": "body1",
                    "description": "",
                    "type": "Phaser.P2.Body"
                },
                {
                    "name": "body2",
                    "description": "",
                    "type": "Phaser.P2.Body"
                }
            ],
            "class": "LR.CollisionManager",
            "namespace": "LR"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\collision_manager.js",
            "line": 162,
            "description": "Returns the collision data for the specified layer",
            "itemtype": "method",
            "name": "getLayerData",
            "params": [
                {
                    "name": "layer",
                    "description": "Name of the layer",
                    "type": "String"
                }
            ],
            "class": "LR.CollisionManager",
            "namespace": "LR"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\game.js",
            "line": 9,
            "description": "The Input Manager of LadybugRiders Engine",
            "itemtype": "property",
            "name": "inputManager",
            "type": "{Phaser.Plugin.InputManager}",
            "class": "LR.Game",
            "namespace": "LR"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\game.js",
            "line": 17,
            "description": "The PlayerSave of LadybugRiders Engine",
            "itemtype": "property",
            "name": "playerSave",
            "type": "{Phaser.Plugin.PlayerSave}",
            "class": "LR.Game",
            "namespace": "LR"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\game.js",
            "line": 25,
            "description": "The CollisionManager of LadybugRiders Engine",
            "itemtype": "property",
            "name": "collisionManager",
            "type": "{CollisionManager}",
            "class": "LR.Game",
            "namespace": "LR"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\gameobject.js",
            "line": 11,
            "description": "ID of the gameobject",
            "itemtype": "property",
            "name": "id",
            "type": "Number",
            "default": "-1",
            "class": "LR.GameObject",
            "namespace": "LR"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\gameobject.js",
            "line": 28,
            "description": "The collision layer index used to filter collisions",
            "itemtype": "property",
            "name": "layer",
            "type": "{string}",
            "default": "\"default\"",
            "class": "LR.GameObject",
            "namespace": "LR"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\gameobject.js",
            "line": 36,
            "description": "The behaviours attached to the gameobject",
            "itemtype": "property",
            "name": "behaviours",
            "type": "{Array}",
            "default": "array",
            "class": "LR.GameObject",
            "namespace": "LR"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\gameobject.js",
            "line": 44,
            "description": "Sounds that can be played by the GameObject. Contains Phaser.Sound objects.",
            "itemtype": "property",
            "name": "sounds",
            "type": "Object",
            "default": "{}",
            "class": "LR.GameObject",
            "namespace": "LR"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\gameobject.js",
            "line": 55,
            "description": "A reference to the current CollisionManager. Set when the GameObject is added to the CollisionManager",
            "itemtype": "property",
            "name": "collisionManager",
            "type": "{CollisionManager}",
            "default": "null",
            "class": "LR.GameObject",
            "namespace": "LR"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\gameobject.js",
            "line": 74,
            "description": "Reference to the game",
            "itemtype": "property",
            "name": "game",
            "type": "Phaser.Game",
            "default": "null",
            "class": "LR.GameObject",
            "namespace": "LR"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\gameobject.js",
            "line": 90,
            "description": "Signal dispatched when a tween is complete",
            "itemtype": "property",
            "name": "onTweenComplete",
            "type": "{Phaser.Signal}",
            "class": "LR.GameObject",
            "namespace": "LR"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\gameobject.js",
            "line": 182,
            "description": "Creates a body and enable physics for the gameobject\nAlso creates a variable go in the {P2.Body} body",
            "itemtype": "method",
            "name": "enablePhysics",
            "params": [
                {
                    "name": "motionState",
                    "description": ": pick STATIC, KINEMATIC or DYNAMIC from Phaser.Physics.P2.Body. Default is DYNAMIC",
                    "type": "Number"
                },
                {
                    "name": "layer",
                    "description": ": the layer of collision. null will let it to \"default\".",
                    "type": "String"
                },
                {
                    "name": "<optional>",
                    "description": "width : new width of the body rectangle. Won't do anything without height.",
                    "type": "Number"
                },
                {
                    "name": "<optional>",
                    "description": "height : new height of the body rectangle",
                    "type": "Number"
                }
            ],
            "class": "LR.GameObject",
            "namespace": "LR"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\gameobject.js",
            "line": 219,
            "description": "Removes the body from the world",
            "itemtype": "method",
            "name": "removePhysics",
            "class": "LR.GameObject",
            "namespace": "LR"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\gameobject.js",
            "line": 231,
            "description": "Enables the behaviours of the gameobject to receive the contact events\nWithout that, onBeginContact and onEndContact are never called",
            "itemtype": "method",
            "name": "enableEvents",
            "class": "LR.GameObject",
            "namespace": "LR"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\gameobject.js",
            "line": 244,
            "description": "Disable the behaviours of the gameobject to receive the contact events\nThe onBeginContact and onEndContact will not be called anymore",
            "itemtype": "method",
            "name": "disableEvents",
            "class": "LR.GameObject",
            "namespace": "LR"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\gameobject.js",
            "line": 257,
            "description": "Enables the sensor behaviour of the shapes of the GameObject",
            "itemtype": "method",
            "name": "enableSensor",
            "params": [
                {
                    "name": "indexes",
                    "description": "Array of indexes of the shapes with we want to be sensors. If null, all the shapes will be sensors.",
                    "type": "Array"
                }
            ],
            "class": "LR.GameObject",
            "namespace": "LR"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\gameobject.js",
            "line": 280,
            "description": "Disables the sensor behaviour of the shapes of the GameObject",
            "itemtype": "method",
            "name": "disableSensor",
            "params": [
                {
                    "name": "indexes",
                    "description": "Array of indexes of the shapes with we want to be physical. If null, all the shapes will be solid.",
                    "type": "Array"
                }
            ],
            "class": "LR.GameObject",
            "namespace": "LR"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\gameobject.js",
            "line": 303,
            "description": "Enable Bounds to be displayed ( if no body is affected yet, this will be effective when one is added )",
            "itemtype": "method",
            "name": "enableDebugBounds",
            "class": "LR.GameObject",
            "namespace": "LR"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\gameobject.js",
            "line": 314,
            "description": "Disable Bounds display( if no body is affected yet, this will be effective when one is added )",
            "itemtype": "method",
            "name": "disableDebugBounds",
            "class": "LR.GameObject",
            "namespace": "LR"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\gameobject.js",
            "line": 325,
            "description": "Changes the motion state of the gameobject body",
            "itemtype": "method",
            "name": "setMotionState",
            "params": [
                {
                    "name": "motionState",
                    "description": "PhysicsSettings.STATIC, PhysicsSettings.KINEMATIC or PhysicsSettings.DYNAMIC",
                    "type": "Number"
                }
            ],
            "class": "LR.GameObject",
            "namespace": "LR"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\gameobject.js",
            "line": 342,
            "description": "Changes the current layer of the object, resetting collisions groups",
            "itemtype": "method",
            "name": "changeLayer",
            "params": [
                {
                    "name": "layer",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "LR.GameObject",
            "namespace": "LR"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\gameobject.js",
            "line": 359,
            "description": "Sets the callback for the postbroadphase\nPostbroadphase is called BEFORE \"enabling\" any collision. You can then prevent a collision from happening\nThe callback should return true to validate a collision ( make it effective in game) \nThe callback will have the colliding body passed in parameter",
            "itemtype": "method",
            "name": "setPostBroadPhaseCallback",
            "params": [
                {
                    "name": "callback",
                    "description": "",
                    "type": "Method"
                },
                {
                    "name": "context",
                    "description": "",
                    "type": "Behaviour"
                }
            ],
            "class": "LR.GameObject",
            "namespace": "LR"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\gameobject.js",
            "line": 377,
            "description": "Called by the CollisionManager when the body of the GameObject is concerned in the postBroadphase\nBasically, this method is called before a collision with another body will appear.\nYou can then decide if you want to let the collision happen \n\nFirst link your callback with setPostBroadPhaseCallback(callback,context)\nThe callback method must return true if you want this gameobject to collide with the otherbody, false instead.\n\nNB: This is called BEFORE onBeginContact",
            "itemtype": "method",
            "name": "onPostBroadPhase",
            "params": [
                {
                    "name": "param_description",
                    "description": "",
                    "type": "Param_type"
                }
            ],
            "class": "LR.GameObject",
            "namespace": "LR"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\gameobject.js",
            "line": 425,
            "description": "Adds a behaviour to the gameobject",
            "itemtype": "method",
            "name": "addBehaviour",
            "params": [
                {
                    "name": "behaviour",
                    "description": "Behaviour instance",
                    "type": "Behaviour"
                }
            ],
            "return": {
                "description": "the behaviour"
            },
            "class": "LR.GameObject",
            "namespace": "LR"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\gameobject.js",
            "line": 436,
            "description": "Removes a behaviour from the gameobject",
            "itemtype": "method",
            "name": "removeBehaviour",
            "params": [
                {
                    "name": "behaviour",
                    "description": "Behaviour instance",
                    "type": "Behaviour"
                }
            ],
            "return": {
                "description": "the behaviour"
            },
            "class": "LR.GameObject",
            "namespace": "LR"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\gameobject.js",
            "line": 447,
            "description": "Returns the requested behaviour. If more than one is attaced, the first one is return. Use getBehaviours if you need them all\nThis could be expensive. Do not do this at every frame.",
            "itemtype": "method",
            "name": "getBehaviour",
            "params": [
                {
                    "name": "behaviour",
                    "description": "The behaviour class",
                    "type": "Class"
                }
            ],
            "return": {
                "description": "the behaviour, or null if not found",
                "type": "Behaviour"
            },
            "class": "LR.GameObject",
            "namespace": "LR"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\gameobject.js",
            "line": 462,
            "description": "Returns the requested behaviour attached to the GameObject or its children.\nIf more than one is attached, the first one is return. Use getBehaviours if you need them all\nThis could be expensive. Do not do this at every frame.",
            "itemtype": "method",
            "name": "getBehaviourInChildren",
            "params": [
                {
                    "name": "behaviour",
                    "description": "The behaviour class",
                    "type": "Class"
                }
            ],
            "return": {
                "description": "the behaviour, or null if not found",
                "type": "Behaviour"
            },
            "class": "LR.GameObject",
            "namespace": "LR"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\gameobject.js",
            "line": 486,
            "description": "Returns all the requested behaviours attached to the object. \nThis could be expensive. Do not do this at every frame.",
            "itemtype": "method",
            "name": "getBehaviours",
            "params": [
                {
                    "name": "behaviour",
                    "description": "The behaviour class",
                    "type": "Class"
                }
            ],
            "return": {
                "description": "the behaviours in an array (might be empty)",
                "type": "Array"
            },
            "class": "LR.GameObject",
            "namespace": "LR"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\gameobject.js",
            "line": 502,
            "description": "Returns all instances of the requested behaviour class attached to the GameObject and its children.\nThis may be expensive. Do not do this at every frame.",
            "itemtype": "method",
            "name": "getBehavioursInChildren",
            "params": [
                {
                    "name": "behaviour",
                    "description": "The behaviour class",
                    "type": "Class"
                }
            ],
            "return": {
                "description": "the behaviours in an array (might be empty)",
                "type": "Array"
            },
            "class": "LR.GameObject",
            "namespace": "LR"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\gameobject.js",
            "line": 526,
            "description": "Try to call the function on every behaviour attached to this GameObject",
            "itemtype": "method",
            "name": "sendMessage",
            "params": [
                {
                    "name": "functionName",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "messageObject",
                    "description": ": You might want to pass an object for the parameter of the function",
                    "type": "Object"
                }
            ],
            "class": "LR.GameObject",
            "namespace": "LR"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\gameobject.js",
            "line": 549,
            "description": "Returns the number of shapes attached to the body",
            "itemtype": "method",
            "name": "getShapesCount",
            "return": {
                "description": "integer"
            },
            "class": "LR.GameObject",
            "namespace": "LR"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\gameobject.js",
            "line": 561,
            "description": "Returns the wanted shape",
            "itemtype": "method",
            "name": "getShape",
            "params": [
                {
                    "name": "shapeIndex",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "P2.Shape"
            },
            "class": "LR.GameObject",
            "namespace": "LR"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\gameobject.js",
            "line": 579,
            "description": "Returns the shape by its name (property lr_name)\nIf many shapes share the same name, this method will return the first encountered in the shapes array",
            "itemtype": "method",
            "name": "getShapeByName",
            "params": [
                {
                    "name": "shapeName",
                    "description": "The name of the researched shape",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "P2.Shape"
            },
            "class": "LR.GameObject",
            "namespace": "LR"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\gameobject.js",
            "line": 596,
            "description": "Returns the shapes by their names (property lr_name)",
            "itemtype": "method",
            "name": "getShapesByNames",
            "params": [
                {
                    "name": "shapeName",
                    "description": "The names of the researched shapes",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "shapes found",
                "type": "Array"
            },
            "class": "LR.GameObject",
            "namespace": "LR"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\gameobject.js",
            "line": 615,
            "description": "Returns the index of the shape found by its name (property lr_name)",
            "itemtype": "method",
            "name": "getShapeIndexByName",
            "params": [
                {
                    "name": "shapeName",
                    "description": "The index of the researched shape",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "index",
                "type": "Number"
            },
            "class": "LR.GameObject",
            "namespace": "LR"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\gameobject.js",
            "line": 631,
            "description": "Returns the size of the wanted shape. You can either pass its index or its name",
            "itemtype": "method",
            "name": "getShapeData",
            "params": [
                {
                    "name": "shapeIndexOrName",
                    "description": "",
                    "type": "Number | string"
                }
            ],
            "return": {
                "description": "object containing the following properties : x, y, width, height (in pixels), rotation (in degrees), sensor (bool), name",
                "type": "Object"
            },
            "class": "LR.GameObject",
            "namespace": "LR"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\gameobject.js",
            "line": 664,
            "description": "Replaces the shape at the given index with a new Rectangle, creating a new shape from the data provided\nThis sahpe will be pushed to the end of shapes array if _shapeIndex is incorrect",
            "itemtype": "method",
            "name": "replaceShapeByRectangle",
            "params": [
                {
                    "name": "shapeIndex",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "data",
                    "description": "Can contain x {Number}, y{Number}, width{Number}, height{Number}, rotation{Number}, sensor {Boolean} properties, name {String}",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "P2.Shape"
            },
            "class": "LR.GameObject",
            "namespace": "LR"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\gameobject.js",
            "line": 714,
            "description": "Replaces the shape at the given index with a new Circle, creating a new shape from the data provided\nThis shape will be pushed to the end of shapes array if _shapeIndex is incorrect",
            "itemtype": "method",
            "name": "replaceShapeByCircle",
            "params": [
                {
                    "name": "shapeIndex",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "data",
                    "description": "Can contain x {Number}, y{Number}, radius{Number}, rotation{Number}, sensor {Boolean} properties, name {String}",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "P2.Shape"
            },
            "class": "LR.GameObject",
            "namespace": "LR"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\gameobject.js",
            "line": 768,
            "description": "Returns the specified sound. If none specified, returns the first sound of the GameObject (if it exists)",
            "itemtype": "method",
            "name": "getSound",
            "params": [
                {
                    "name": "name",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Phaser.Sound"
            },
            "class": "LR.GameObject",
            "namespace": "LR"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\gameobject.js",
            "line": 781,
            "description": "Plays the specified sound",
            "itemtype": "method",
            "name": "playSound",
            "params": [
                {
                    "name": "name",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "volume",
                    "description": "0 <= volume <= 1",
                    "type": "Number"
                },
                {
                    "name": "loop",
                    "description": "",
                    "type": "Boolean"
                }
            ],
            "class": "LR.GameObject",
            "namespace": "LR"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\gameobject.js",
            "line": 803,
            "description": "Stops the specified sound",
            "itemtype": "method",
            "name": "playSound",
            "params": [
                {
                    "name": "name",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "LR.GameObject",
            "namespace": "LR"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\gameobject.js",
            "line": 835,
            "description": "Enable this specified sound to be 3D\nThe distance is used to make the sound audible. This is computed from the distance between the center of the camera and the position of the GameObject",
            "itemtype": "method",
            "name": "enable3DSound",
            "params": [
                {
                    "name": "Name",
                    "description": "of the sound",
                    "type": "String"
                },
                {
                    "name": "Distance",
                    "description": "where the sound begins to be audible",
                    "type": "Number"
                },
                {
                    "name": "Maximum",
                    "description": "volume of the sound",
                    "type": "Number"
                }
            ],
            "class": "LR.GameObject",
            "namespace": "LR"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\gameobject.js",
            "line": 881,
            "description": "Sets the position of the GameObject. Takes the body in account",
            "itemtype": "method",
            "name": "setPosition",
            "params": [
                {
                    "name": "x",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "LR.GameObject",
            "namespace": "LR"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\gameobject.js",
            "line": 898,
            "description": "Accessor to the entity's body. Read only.",
            "itemtype": "property",
            "name": "body",
            "type": "Phaser.Physics.P2.Body",
            "class": "LR.GameObject",
            "namespace": "LR"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\gameobject.js",
            "line": 912,
            "description": "Accessor to the entity's x.",
            "itemtype": "property",
            "name": "x",
            "type": "Number",
            "class": "LR.GameObject",
            "namespace": "LR"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\gameobject.js",
            "line": 934,
            "description": "Accessor to the entity's y.",
            "itemtype": "property",
            "name": "y",
            "type": "Number",
            "class": "LR.GameObject",
            "namespace": "LR"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\gameobject.js",
            "line": 956,
            "description": "Accessor to the entity's world coordinates property (readonly)",
            "itemtype": "property",
            "name": "world",
            "type": "{Phaser.Point}",
            "class": "LR.GameObject",
            "namespace": "LR"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\gameobject.js",
            "line": 970,
            "description": "Accessor to the entity's world X coordinates\nUnlike world property, you can set this value to change the position of the GameObject in the world",
            "itemtype": "property",
            "name": "worldX",
            "type": "{number}",
            "class": "LR.GameObject",
            "namespace": "LR"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\gameobject.js",
            "line": 993,
            "description": "Accessor to the entity's world Y coordinates\nUnlike world property, you can set this value to change the position of the GameObject in the world",
            "itemtype": "property",
            "name": "worldX",
            "type": "{number}",
            "class": "LR.GameObject",
            "namespace": "LR"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\gameobject.js",
            "line": 1017,
            "description": "Accessor to the body's gravity. Returns 0 if no body affected.",
            "itemtype": "property",
            "name": "gravity",
            "type": "Number",
            "class": "LR.GameObject",
            "namespace": "LR"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\gameobject.js",
            "line": 1039,
            "description": "Accessor to the body's velocityX in world coordinates. Returns 0 if no body affected.",
            "itemtype": "property",
            "name": "velocityX",
            "type": "Number",
            "class": "LR.GameObject",
            "namespace": "LR"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\gameobject.js",
            "line": 1055,
            "description": "Accessor to the body's velocityY in world coordinates. Returns 0 if no body affected.",
            "itemtype": "property",
            "name": "velocityX",
            "type": "Number",
            "class": "LR.GameObject",
            "namespace": "LR"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\gameobject.js",
            "line": 1071,
            "description": "Changes the parent of the entity",
            "itemtype": "method",
            "name": "changeParent",
            "params": [
                {
                    "name": "newParent",
                    "description": "",
                    "type": "LR.Entity"
                }
            ],
            "class": "LR.GameObject",
            "namespace": "LR"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\gameobject.js",
            "line": 1088,
            "description": "Adds a tween with the data specified\nexample of input data : { \"properties\":{\"body.x\":100},\"duration\": 1000 ...etc..}",
            "itemtype": "method",
            "name": "addTween",
            "params": [
                {
                    "name": "tweenData",
                    "description": "Object containing the tween properties",
                    "type": "Object"
                }
            ],
            "class": "LR.GameObject",
            "namespace": "LR"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\gameobject.js",
            "line": 1107,
            "description": "Launch the specified tween if previously added.\nIf there are many target in the properties, many tweens will be launched. \nThis is why you get array of tweens",
            "itemtype": "method",
            "name": "playTween",
            "params": [
                {
                    "name": "tweenName",
                    "description": "The tween name. Use GameObject.addTween to add a tween",
                    "type": "String"
                }
            ],
            "return": {
                "description": "An array containing all the tweens induced by the tween properties",
                "type": "Array"
            },
            "class": "LR.GameObject",
            "namespace": "LR"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\gameobject.js",
            "line": 1199,
            "description": "Chains the specified tweens and launch the first one\nWarning : this will override any tween previous chaining",
            "itemtype": "method",
            "name": "playChainedTweens",
            "params": [
                {
                    "name": "tweenNames",
                    "description": "The tween names. As many as you want to chain",
                    "type": "String"
                }
            ],
            "return": {
                "description": "An array of the first tweens",
                "type": "Array"
            },
            "class": "LR.GameObject",
            "namespace": "LR"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\gameobject.js",
            "line": 1236,
            "description": "Plays the specified animation",
            "itemtype": "method",
            "name": "playAnim",
            "params": [
                {
                    "name": "animName",
                    "description": "The name of the animation",
                    "type": "String"
                }
            ],
            "return": {
                "description": "The Animation object",
                "type": "Phaser.Animation"
            },
            "class": "LR.GameObject",
            "namespace": "LR"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\gameobject.js",
            "line": 1248,
            "description": "Stops the specified animation",
            "itemtype": "method",
            "name": "stopAnim",
            "params": [
                {
                    "name": "animName",
                    "description": "The name of the animation",
                    "type": "String"
                },
                {
                    "name": "resetFrame",
                    "description": "Sets the first frame of the animation when stopping it",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "The Animation object",
                "type": "Phaser.Animation"
            },
            "class": "LR.GameObject",
            "namespace": "LR"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\gameobject.js",
            "line": 1261,
            "description": "Returns the animation object",
            "itemtype": "method",
            "name": "getAnim",
            "params": [
                {
                    "name": "animName",
                    "description": "The name of the animation",
                    "type": "String"
                }
            ],
            "return": {
                "description": "The Animation object",
                "type": "Phaser.Animation"
            },
            "class": "LR.GameObject",
            "namespace": "LR"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\gameobject.js",
            "line": 1275,
            "description": "Called when a cutscene begins",
            "itemtype": "method",
            "name": "onBeginCutscene",
            "class": "LR.GameObject",
            "namespace": "LR"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\gameobject.js",
            "line": 1287,
            "description": "Called when a cutscene ends",
            "itemtype": "method",
            "name": "onEndCutscene",
            "class": "LR.GameObject",
            "namespace": "LR"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\gameobject.js",
            "line": 1303,
            "description": "Find a gameobject by its name",
            "itemtype": "method",
            "name": "<static> FindByName",
            "params": [
                {
                    "name": "root",
                    "description": "Root of the search",
                    "type": "LR.GameObject | LR.Entity"
                },
                {
                    "name": "name",
                    "description": "Gameobject's name to find",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Found gameobject",
                "type": "LR.GameObject"
            },
            "class": "LR.GameObject",
            "namespace": "LR"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\gameobject.js",
            "line": 1333,
            "description": "Find a gameobject by its ID",
            "itemtype": "method",
            "name": "<static> FindByID",
            "params": [
                {
                    "name": "root",
                    "description": "Root of the search",
                    "type": "LR.GameObject | LR.Entity"
                },
                {
                    "name": "name",
                    "description": "Gameobject's ID to find",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "Found gameobject",
                "type": "LR.GameObject"
            },
            "class": "LR.GameObject",
            "namespace": "LR"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\levelexporter.js",
            "line": 14,
            "description": "Export all the level.",
            "itemtype": "method",
            "name": "export",
            "params": [
                {
                    "name": "game",
                    "description": "The game of the level",
                    "type": "Phaser.Game"
                }
            ],
            "return": {
                "description": "exported level",
                "type": "Object"
            },
            "class": "LR.LevelExporter",
            "namespace": "LR"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\levelexporter.js",
            "line": 32,
            "description": "* ASSETS **",
            "class": "LR.LevelExporter",
            "namespace": "LR"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\levelexporter.js",
            "line": 36,
            "description": "Export all the level's assets.",
            "itemtype": "method",
            "name": "exportAssets",
            "params": [
                {
                    "name": "cache",
                    "description": "The game's cache of the level",
                    "type": "Phaser.Cache"
                }
            ],
            "return": {
                "description": "exportable level's assets",
                "type": "Object"
            },
            "class": "LR.LevelExporter",
            "namespace": "LR"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\levelexporter.js",
            "line": 55,
            "description": "* IMAGES **",
            "class": "LR.LevelExporter",
            "namespace": "LR"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\levelexporter.js",
            "line": 59,
            "description": "Export all the level's images.",
            "itemtype": "method",
            "name": "exportImages",
            "params": [
                {
                    "name": "level's",
                    "description": "world",
                    "type": "Phaser.World"
                }
            ],
            "return": {
                "description": "level's images",
                "type": "Array"
            },
            "class": "LR.LevelExporter",
            "namespace": "LR"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\levelexporter.js",
            "line": 77,
            "description": "Return the image keys of the entities and its children.",
            "itemtype": "method",
            "name": "getImages",
            "params": [
                {
                    "name": "entity",
                    "description": "",
                    "type": "LR.Entity"
                },
                {
                    "name": "keys",
                    "description": "array stored",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "image keys",
                "type": "Array"
            },
            "class": "LR.LevelExporter",
            "namespace": "LR"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\levelexporter.js",
            "line": 105,
            "description": "Export all the level's images.",
            "itemtype": "method",
            "name": "exportImages",
            "params": [
                {
                    "name": "cache",
                    "description": "The game's cache of the level",
                    "type": "Phaser.Cache"
                }
            ],
            "return": {
                "description": "exportable level's images",
                "type": "Array"
            },
            "class": "LR.LevelExporter",
            "namespace": "LR"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\levelexporter.js",
            "line": 153,
            "description": "Export a cached image into an exportable image.",
            "itemtype": "method",
            "name": "exportImage",
            "params": [
                {
                    "name": "cachedImage",
                    "description": "The cached image",
                    "type": "Image"
                },
                {
                    "name": "frame",
                    "description": "The default frame of the image",
                    "type": "Phaser.Frame"
                }
            ],
            "return": {
                "description": "exportable level's images",
                "type": "Object"
            },
            "class": "LR.LevelExporter",
            "namespace": "LR"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\levelexporter.js",
            "line": 176,
            "description": "* ATLASES **",
            "class": "LR.LevelExporter",
            "namespace": "LR"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\levelexporter.js",
            "line": 220,
            "description": "* SOUNDS **",
            "class": "LR.LevelExporter",
            "namespace": "LR"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\levelexporter.js",
            "line": 275,
            "description": "* BEHAVIOURS **",
            "class": "LR.LevelExporter",
            "namespace": "LR"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\levelexporter.js",
            "line": 279,
            "description": "Export all the level's behaviours.",
            "itemtype": "method",
            "name": "exportBehaviours",
            "params": [
                {
                    "name": "game",
                    "description": "",
                    "type": "Phaser.Game"
                },
                {
                    "name": "project",
                    "description": "data",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "level's behaviours",
                "type": "Array"
            },
            "class": "LR.LevelExporter",
            "namespace": "LR"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\levelexporter.js",
            "line": 297,
            "description": "Return the behaviours of the entities and its children.",
            "itemtype": "method",
            "name": "getBehaviours",
            "params": [
                {
                    "name": "entity",
                    "description": "",
                    "type": "LR.Entity"
                }
            ],
            "return": {
                "description": "behaviours",
                "type": "Array"
            },
            "class": "LR.LevelExporter",
            "namespace": "LR"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\levelexporter.js",
            "line": 319,
            "description": "Return a merge array of behaviours (no doublons).",
            "itemtype": "method",
            "name": "mergeBehaviours",
            "params": [
                {
                    "name": "first",
                    "description": "group of behaviours",
                    "type": "LR.Entity"
                },
                {
                    "name": "second",
                    "description": "group of behaviours",
                    "type": "LR.Entity"
                }
            ],
            "return": {
                "description": "behaviours",
                "type": "Array"
            },
            "class": "LR.LevelExporter",
            "namespace": "LR"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\levelexporter.js",
            "line": 352,
            "description": "Add project path to exported behaviours.",
            "itemtype": "method",
            "name": "addPathToExportedBehaviours",
            "params": [
                {
                    "name": "exported",
                    "description": "behaviours",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "All behaviours with full data",
                "type": "Array"
            },
            "class": "LR.LevelExporter",
            "namespace": "LR"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\levelexporter.js",
            "line": 380,
            "description": "* OBJECTS **",
            "class": "LR.LevelExporter",
            "namespace": "LR"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\levelexporter.js",
            "line": 384,
            "description": "Export all the level's entities.",
            "itemtype": "method",
            "name": "exportEntities",
            "params": [
                {
                    "name": "entity",
                    "description": "The entity object",
                    "type": "Phaser.Group | GameObject"
                }
            ],
            "return": {
                "description": "the exported entity and its descendants",
                "type": "Phaser.Group | GameObject"
            },
            "class": "LR.LevelExporter",
            "namespace": "LR"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\levelexporter.js",
            "line": 420,
            "description": "Export all the level's entities.",
            "itemtype": "method",
            "name": "exportEntity",
            "params": [
                {
                    "name": "entity",
                    "description": "The object to export",
                    "type": "LR.Entity"
                }
            ],
            "return": {
                "description": "the exported object",
                "type": "LR.Entity"
            },
            "class": "LR.LevelExporter",
            "namespace": "LR"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\levelimporter.js",
            "line": 14,
            "description": "Import all the level.",
            "itemtype": "method",
            "name": "import",
            "params": [
                {
                    "name": "level",
                    "description": "The level to import",
                    "type": "Object"
                },
                {
                    "name": "game",
                    "description": "The game where the level will be imported",
                    "type": "Phaser.Game"
                },
                {
                    "name": "promise",
                    "description": "A promise",
                    "type": "Function"
                }
            ],
            "class": "LR.LevelImporter",
            "namespace": "LR"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\levelimporter.js",
            "line": 38,
            "description": "* ASSETS **",
            "class": "LR.LevelImporter",
            "namespace": "LR"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\levelimporter.js",
            "line": 42,
            "description": "Import all the assets (images, sounds, etc...)",
            "itemtype": "method",
            "name": "importAssets",
            "params": [
                {
                    "name": "assets",
                    "description": "Assets informations",
                    "type": "Object"
                },
                {
                    "name": "loader",
                    "description": "The loader used to import assets",
                    "type": "Phaser.Loader"
                }
            ],
            "class": "LR.LevelImporter",
            "namespace": "LR"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\levelimporter.js",
            "line": 63,
            "description": "* IMAGES **",
            "class": "LR.LevelImporter",
            "namespace": "LR"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\levelimporter.js",
            "line": 67,
            "description": "Import all the images",
            "itemtype": "method",
            "name": "importImages",
            "params": [
                {
                    "name": "images",
                    "description": "Images informations",
                    "type": "Object"
                },
                {
                    "name": "loader",
                    "description": "The loader used to import images",
                    "type": "Phaser.Loader"
                }
            ],
            "class": "LR.LevelImporter",
            "namespace": "LR"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\levelimporter.js",
            "line": 94,
            "description": "* ENTITIES **",
            "class": "LR.LevelImporter",
            "namespace": "LR"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\levelimporter.js",
            "line": 98,
            "description": "Import all entities and do the promise",
            "itemtype": "method",
            "name": "importEntitiesAndDo",
            "params": [
                {
                    "name": "objects",
                    "description": "Entities informations",
                    "type": "Object"
                },
                {
                    "name": "game",
                    "description": "The game where entities will be imported",
                    "type": "Phaser.Game"
                },
                {
                    "name": "promise",
                    "description": "A promise",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "the root of all entities"
            },
            "class": "LR.LevelImporter",
            "namespace": "LR"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\levelimporter.js",
            "line": 123,
            "description": "Import all entities",
            "itemtype": "method",
            "name": "importEntities",
            "params": [
                {
                    "name": "Objects",
                    "description": "Entities informations",
                    "type": "Object"
                },
                {
                    "name": "game",
                    "description": "The game where entities will be imported",
                    "type": "Phaser.Game"
                }
            ],
            "class": "LR.LevelImporter",
            "namespace": "LR"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\levelimporter.js",
            "line": 159,
            "description": "Override this method to do something between the entities importation and\nthe promise",
            "itemtype": "method",
            "name": "doAfterImportEntitiesAndBeforePromise",
            "params": [
                {
                    "name": "objects",
                    "description": "Entities informations",
                    "type": "Object"
                },
                {
                    "name": "game",
                    "description": "The game where entiites will be imported",
                    "type": "Phaser.Game"
                }
            ],
            "class": "LR.LevelImporter",
            "namespace": "LR"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\levelimporter.js",
            "line": 171,
            "description": "Import an entity",
            "itemtype": "method",
            "name": "importEntity",
            "params": [
                {
                    "name": "object",
                    "description": "Entity informations",
                    "type": "Object"
                },
                {
                    "name": "game",
                    "description": "The game where entities will be imported",
                    "type": "Phaser.Game"
                }
            ],
            "class": "LR.LevelImporter",
            "namespace": "LR"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\levelimportergame.js",
            "line": 42,
            "description": "Import all the images",
            "itemtype": "method",
            "name": "importImages",
            "params": [
                {
                    "name": "images",
                    "description": "Images informations",
                    "type": "Object"
                },
                {
                    "name": "loader",
                    "description": "The loader used to import images",
                    "type": "Phaser.Loader"
                }
            ],
            "class": "LR.LevelImporterGame",
            "namespace": "LR"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\levelimportergame.js",
            "line": 98,
            "description": "Import all the behaviours",
            "itemtype": "method",
            "name": "importBehaviours",
            "params": [
                {
                    "name": "behaviours",
                    "description": "Behaviours informations",
                    "type": "Object"
                },
                {
                    "name": "loader",
                    "description": "The loader used to import behaviours",
                    "type": "Phaser.Loader"
                }
            ],
            "class": "LR.LevelImporterGame",
            "namespace": "LR"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\utils.js",
            "line": 18,
            "description": "Adds as many _char as _width\nexample : pad(45,4,\"0\") = \"0045\"\nThe char by default is \"0\"",
            "itemtype": "method",
            "name": "pad",
            "params": [
                {
                    "name": "number",
                    "description": ": number or string to pad",
                    "type": "Number|string"
                },
                {
                    "name": "width",
                    "description": ": final length of the returned string",
                    "type": "Number"
                },
                {
                    "name": "char",
                    "description": ": char or string to add to fill the resulting string",
                    "type": "String|char"
                }
            ],
            "class": "LR.Utils",
            "namespace": "LR"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\utils.js",
            "line": 34,
            "description": "Remove an object from the specified array and return it",
            "itemtype": "method",
            "name": "removeFromArray",
            "params": [
                {
                    "name": "object",
                    "description": "Object to be removed",
                    "type": "Object"
                },
                {
                    "name": "array",
                    "description": "The array containing the object",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "null if not found"
            },
            "class": "LR.Utils",
            "namespace": "LR"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\utils.js",
            "line": 62,
            "description": "Converts from degrees to radians.",
            "itemtype": "method",
            "name": "toRadians",
            "params": [
                {
                    "name": "angle",
                    "description": "in degrees",
                    "type": "Number"
                }
            ],
            "class": "LR.Utils",
            "namespace": "LR"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\utils.js",
            "line": 72,
            "description": "Converts from radians to degrees.",
            "itemtype": "method",
            "name": "toDegrees",
            "params": [
                {
                    "name": "angle",
                    "description": "in radians",
                    "type": "Number"
                }
            ],
            "class": "LR.Utils",
            "namespace": "LR"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\utils.js",
            "line": 82,
            "description": "Rotates a point with the given angle (in degrees)",
            "itemtype": "method",
            "name": "rotatePoint",
            "params": [
                {
                    "name": "point",
                    "description": "If null, default value is (1,0)",
                    "type": "Phaser.Point"
                },
                {
                    "name": "angle",
                    "description": "In degrees. Positive angle go counter-clokwise",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "Phaser.Point"
            },
            "class": "LR.Utils",
            "namespace": "LR"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\utils.js",
            "line": 99,
            "description": "Rotates a point with the given angle (in degrees) around the specified anchor point",
            "itemtype": "method",
            "name": "rotatePointAround",
            "params": [
                {
                    "name": "point",
                    "description": "",
                    "type": "Phaser.Point"
                },
                {
                    "name": "angle",
                    "description": "In degrees. Positive angle go counter-clokwise",
                    "type": "Number"
                },
                {
                    "name": "anchor",
                    "description": "The anchor point to rotate around",
                    "type": "Phaser.Point"
                }
            ],
            "return": {
                "description": "Phaser.Point"
            },
            "class": "LR.Utils",
            "namespace": "LR"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\utils.js",
            "line": 122,
            "description": "Compute angle between two points / vectors",
            "itemtype": "method",
            "name": "angle",
            "params": [
                {
                    "name": "pointA",
                    "description": "",
                    "type": "Phaser.Point"
                },
                {
                    "name": "pointB",
                    "description": "",
                    "type": "Phaser.Point"
                }
            ],
            "class": "LR.Utils",
            "namespace": "LR"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\utils.js",
            "line": 138,
            "description": "This function returns the object's property defined by a complex string\nie : if string = \"body.x\"\nthe object value will be the body property of the object\nIf a property is not found, the object is returned as itself\nexample of returned object :\n{ object : instanceof P2.Body , property : \"x\"}\nyou can then access your property : object[property]",
            "class": "LR.Utils",
            "namespace": "LR"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\utils.js",
            "line": 168,
            "description": "Returns an object containing the sides of the shapes \nproperties of the object : left, right, top, bottom \nin the world coordinates",
            "itemtype": "method",
            "name": "getRectShapeSides",
            "params": [
                {
                    "name": "go",
                    "description": "",
                    "type": "GameObject"
                },
                {
                    "name": "shape",
                    "description": "",
                    "type": "P2.Shape"
                }
            ],
            "class": "LR.Utils",
            "namespace": "LR"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\utils.js",
            "line": 197,
            "description": "Returns true if the sprite is visible by the camera",
            "itemtype": "method",
            "name": "isSpriteInCameraView",
            "params": [
                {
                    "name": "sprite",
                    "description": "The sprite",
                    "type": "LR.Entity.Sprite"
                },
                {
                    "name": "camera",
                    "description": "The active camera",
                    "type": "Camera"
                }
            ],
            "class": "LR.Utils",
            "namespace": "LR"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\utils.js",
            "line": 217,
            "description": "Returns the side of the collision between two gameobject's shapes \nreturned data can be compared with :\nLR.Utils.RIGHT | LR.Utils.LEFT | LR.Utils.TOP | LR.Utils.BOTTOM",
            "itemtype": "method",
            "name": "getCollisionSide",
            "params": [
                {
                    "name": "gameobject1",
                    "description": "The first gameobject",
                    "type": "LR.GameObject"
                },
                {
                    "name": "shape1",
                    "description": "The first shape",
                    "type": "Shape"
                },
                {
                    "name": "gameobject2",
                    "description": "The second gameobject",
                    "type": "LR.GameObject"
                },
                {
                    "name": "shape2",
                    "description": "The second shape",
                    "type": "Shape"
                }
            ],
            "return": {
                "description": "integer"
            },
            "class": "LR.Utils",
            "namespace": "LR"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\utils.js",
            "line": 240,
            "description": "Returns the side of the collision between two gameobject with a rectangle shape\nreturned data can be compared with :\nLR.Utils.RIGHT | LR.Utils.LEFT | LR.Utils.TOP | LR.Utils.BOTTOM",
            "itemtype": "method",
            "name": "getRectCollisionSide",
            "params": [
                {
                    "name": "gameobject1",
                    "description": "The first gameobject",
                    "type": "LR.GameObject"
                },
                {
                    "name": "shape1",
                    "description": "The first rectangle shape",
                    "type": "Shape"
                },
                {
                    "name": "gameobject2",
                    "description": "The second gameobject",
                    "type": "LR.GameObject"
                },
                {
                    "name": "shape2",
                    "description": "The second rectangle shape",
                    "type": "Shape"
                }
            ],
            "return": {
                "description": "integer"
            },
            "class": "LR.Utils",
            "namespace": "LR"
        },
        {
            "file": "app\\shared\\js\\dev\\phaser\\utils.js",
            "line": 286,
            "description": "Returns the side of the collision between two gameobject whose one is a circle shape\nreturned data can be compared with :\nLR.Utils.RIGHT | LR.Utils.LEFT | LR.Utils.TOP | LR.Utils.BOTTOM",
            "itemtype": "method",
            "name": "getCircleCollisionSide",
            "params": [
                {
                    "name": "gameobject1",
                    "description": "The first gameobject",
                    "type": "LR.GameObject"
                },
                {
                    "name": "shape1",
                    "description": "The first shape",
                    "type": "Shape"
                },
                {
                    "name": "gameobject2",
                    "description": "The second gameobject",
                    "type": "LR.GameObject"
                },
                {
                    "name": "shape2",
                    "description": "The second shape",
                    "type": "Shape"
                }
            ],
            "return": {
                "description": "integer"
            },
            "class": "LR.Utils",
            "namespace": "LR"
        },
        {
            "file": "app\\shared\\js\\dev\\lr.js",
            "line": 14,
            "description": "Find a entity by its GameObject name",
            "itemtype": "method",
            "name": "FindByName",
            "params": [
                {
                    "name": "root",
                    "description": "Root of the search",
                    "type": "Phaser.World | Phaser.Group | Phaser.Sprite"
                },
                {
                    "name": "name",
                    "description": "Gameobject's name",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Found entity",
                "type": "Phaser.World | Phaser.Group | Phaser.Sprite"
            },
            "class": "LR.LR",
            "namespace": "LR"
        },
        {
            "file": "app\\shared\\js\\dev\\lr.js",
            "line": 43,
            "description": "Find a entity by its GameObject ID",
            "itemtype": "method",
            "name": "FindByID",
            "params": [
                {
                    "name": "root",
                    "description": "Root of the search",
                    "type": "Phaser.World | Phaser.Group | Phaser.Sprite"
                },
                {
                    "name": "name",
                    "description": "Gameobject's ID",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "Found entity",
                "type": "Phaser.World | Phaser.Group | Phaser.Sprite"
            },
            "class": "LR.LR",
            "namespace": "LR"
        }
    ],
    "warnings": [
        {
            "message": "unknown tag: name",
            "line": " app\\shared\\js\\dev\\phaser\\entity\\bitmap_text.js:108"
        },
        {
            "message": "unknown tag: name",
            "line": " app\\shared\\js\\dev\\phaser\\entity\\text.js:84"
        },
        {
            "message": "param name missing: {Object}",
            "line": " app\\shared\\js\\dev\\phaser\\collision_manager.js:2"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " app\\shared\\js\\dev\\phaser\\collision_manager.js:45"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " app\\shared\\js\\dev\\phaser\\gameobject.js:447"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " app\\shared\\js\\dev\\phaser\\gameobject.js:462"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " app\\shared\\js\\dev\\phaser\\gameobject.js:486"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " app\\shared\\js\\dev\\phaser\\gameobject.js:502"
        },
        {
            "message": "replacing incorrect tag: parma with param",
            "line": " app\\shared\\js\\dev\\phaser\\utils.js:168"
        },
        {
            "message": "Missing item type\n* PROJECT **",
            "line": " app\\editor\\js\\dev\\angular\\controller_header.js:134"
        },
        {
            "message": "Missing item type\n* IMAGES **",
            "line": " app\\editor\\js\\dev\\angular\\controller_header.js:185"
        },
        {
            "message": "Missing item type\n* ATLASES **",
            "line": " app\\editor\\js\\dev\\angular\\controller_header.js:220"
        },
        {
            "message": "Missing item type\n* AUDIOS **",
            "line": " app\\editor\\js\\dev\\angular\\controller_header.js:253"
        },
        {
            "message": "Missing item type\n* LAYERS **",
            "line": " app\\editor\\js\\dev\\angular\\controller_header.js:286"
        },
        {
            "message": "Missing item type\n* BEHAVIOURS **",
            "line": " app\\editor\\js\\dev\\angular\\controller_header.js:334"
        },
        {
            "message": "Missing item type\n* PREFABS **",
            "line": " app\\editor\\js\\dev\\angular\\controller_header.js:368"
        },
        {
            "message": "Missing item type\n* FONTS **",
            "line": " app\\editor\\js\\dev\\angular\\controller_header.js:399"
        },
        {
            "message": "Missing item type\n* LEVELS **",
            "line": " app\\editor\\js\\dev\\angular\\controller_header.js:416"
        },
        {
            "message": "Missing item type\n* INPUTS **",
            "line": " app\\editor\\js\\dev\\angular\\controller_header.js:443"
        },
        {
            "message": "Missing item type\n* ADDING ENTITIES **",
            "line": " app\\editor\\js\\dev\\angular\\controller_header.js:488"
        },
        {
            "message": "Missing item type\n* LEVEL IMPORTER **",
            "line": " app\\editor\\js\\dev\\angular\\controller_header.js:516"
        },
        {
            "message": "Missing item type\n* LEVEL EXPORTER **",
            "line": " app\\editor\\js\\dev\\angular\\controller_header.js:550"
        },
        {
            "message": "Missing item type\n* LEVEL DEFAULT **",
            "line": " app\\editor\\js\\dev\\angular\\controller_header.js:571"
        },
        {
            "message": "Missing item type\n* SETTINGS **",
            "line": " app\\editor\\js\\dev\\angular\\controller_header.js:592"
        },
        {
            "message": "Missing item type\n* CUTSCENE EDITOR **",
            "line": " app\\editor\\js\\dev\\angular\\controller_header.js:611"
        },
        {
            "message": "Missing item type\n******  HELP *******",
            "line": " app\\editor\\js\\dev\\angular\\controller_header.js:645"
        },
        {
            "message": "Missing item type\nCalled when an action of the current event has finished",
            "line": " app\\shared\\js\\dev\\phaser\\plugin\\cutscene_manager.js:135"
        },
        {
            "message": "Missing item type\nTween properties can be composite. By example, if we have a property like \"body.x\", the tween\nactually acts on the body itself as a target, not the entity.\nSo we have to manually parse the properties and create the tween on the right objects.",
            "line": " app\\shared\\js\\dev\\phaser\\plugin\\cutscene_manager.js:195"
        },
        {
            "message": "Missing item type\nCreates a tween for the targeted object and start it",
            "line": " app\\shared\\js\\dev\\phaser\\plugin\\cutscene_manager.js:237"
        },
        {
            "message": "Missing item type\nCalls a function on the _target GameObject",
            "line": " app\\shared\\js\\dev\\phaser\\plugin\\cutscene_manager.js:259"
        },
        {
            "message": "Missing item type\nThis function returns the target object of the tween property defined by the string\nie : if string = \"body.x\"\nthe return value will be the body property of the object\nIf a property is not found, the object is returned as itself\nexample of returned object :\n{ targetObject : P2.Body... , property : \"x\"}",
            "line": " app\\shared\\js\\dev\\phaser\\plugin\\cutscene_manager.js:282"
        },
        {
            "message": "Missing item type\nThis is an array that can be used to know which functions can be called as \"other\"\nThis will mostly be used by the editor",
            "line": " app\\shared\\js\\dev\\phaser\\plugin\\cutscene_manager.js:315"
        },
        {
            "message": "Missing item type",
            "line": " app\\shared\\js\\dev\\phaser\\plugin\\pollinator.js:3"
        },
        {
            "message": "Missing item type\nThis creates a default dialog box at the top of the screen, fixed to camera",
            "line": " app\\shared\\js\\dev\\phaser\\ui\\dialog_box.js:86"
        },
        {
            "message": "Missing item type\n* ASSETS **",
            "line": " app\\shared\\js\\dev\\phaser\\levelexporter.js:32"
        },
        {
            "message": "Missing item type\n* IMAGES **",
            "line": " app\\shared\\js\\dev\\phaser\\levelexporter.js:55"
        },
        {
            "message": "Missing item type\n* ATLASES **",
            "line": " app\\shared\\js\\dev\\phaser\\levelexporter.js:176"
        },
        {
            "message": "Missing item type\n* SOUNDS **",
            "line": " app\\shared\\js\\dev\\phaser\\levelexporter.js:220"
        },
        {
            "message": "Missing item type\n* BEHAVIOURS **",
            "line": " app\\shared\\js\\dev\\phaser\\levelexporter.js:275"
        },
        {
            "message": "Missing item type\n* OBJECTS **",
            "line": " app\\shared\\js\\dev\\phaser\\levelexporter.js:380"
        },
        {
            "message": "Missing item type\n* ASSETS **",
            "line": " app\\shared\\js\\dev\\phaser\\levelimporter.js:38"
        },
        {
            "message": "Missing item type\n* IMAGES **",
            "line": " app\\shared\\js\\dev\\phaser\\levelimporter.js:63"
        },
        {
            "message": "Missing item type\n* ENTITIES **",
            "line": " app\\shared\\js\\dev\\phaser\\levelimporter.js:94"
        },
        {
            "message": "Missing item type\nThis function returns the object's property defined by a complex string\nie : if string = \"body.x\"\nthe object value will be the body property of the object\nIf a property is not found, the object is returned as itself\nexample of returned object :\n{ object : instanceof P2.Body , property : \"x\"}\nyou can then access your property : object[property]",
            "line": " app\\shared\\js\\dev\\phaser\\utils.js:138"
        }
    ]
}