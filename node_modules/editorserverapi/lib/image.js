"use strict";

var ListedEntity = require('./listed_entity');
var FileManager = require('./file_manager');
var fs = require('fs');
var path = require('path');

/**
* Image entity
*
* @class Image
* @constructor
* @param {string} root path
* @param {Express} express application
*/
var Image = function(_root, _app) {
	ListedEntity.call(this, _root, _app);
};

Image.prototype = Object.create(ListedEntity.prototype);
Image.prototype.constructor = Image;

/**
* Image key
*
* @property KEY
* @type string
* @default "image"
*/
Image.KEY = "image";

/**
* Allowed image extentions
*
* @property EXTENTIONS_FILTER
* @type regex
*/
Image.EXTENTIONS_FILTER = /.(png|PNG|jpg|JPG|jpeg|JPEG|gif|GIF)/i;

/**
* Get the entity's path
*
* @method getPath
*/
Image.prototype.getPath = function() {
	return this.root + '/' + Image.KEY;
};

/**
* Routes the entity
*
* @method routing
*/
Image.prototype.routing = function() {
	var instance = this;

	this.app.get(this.getPath(), function(req, res) {
		var filepath = "./app" + req.query.path;
		FileManager.List(filepath, {recursive: true}, function(_error, _files) {
			res.setHeader('content-type', 'text/plain');
			res.statusCode = 500;

			if (_error) {
				res.write(_error);
			} else {
				res.statusCode = 200;
				res.setHeader('content-type', 'application/json');

				var images = new Array();
				for (var i = 0; i < _files.length; i++) {
					var file = _files[i];

					try {
						// get file extension
						var extension = path.extname(file);

						// if the extenstion is allowed
						if (Image.EXTENTIONS_FILTER.test(extension)) {
							// add the image
							images.push({
								name: path.basename(file, extension),
								path: file
							});
						}
					}	catch(e) {
						console.error(e);
					}
				};

				var data = JSON.stringify({
					images: images
				})
				res.write(data);
			}
			res.end();
		});
	});
};

module.exports = Image;