"use strict";

var ListedEntity = require('./listed_entity');
var FileManager = require('./file_manager');
var fs = require('fs');
var path = require('path');

/**
* Atlas entity
*
* @class Atlas
* @constructor
* @param {string} root path
* @param {Express} express application
*/
var Atlas = function(_root, _app) {
    ListedEntity.call(this, _root, _app);
};

Atlas.prototype = Object.create(ListedEntity.prototype);
Atlas.prototype.constructor = Atlas;

/**
* Atlas key
*
* @property KEY
* @type string
* @default "atlas"
*/
Atlas.KEY = "atlas";

/**
* Allowed atlas image extentions
*
* @property EXTENTIONS_IMAGE_FILTER
* @type regex
*/
Atlas.EXTENTIONS_IMAGE_FILTER = /.(png|PNG)/i;

/**
* Atlas data extentions
*
* @property EXTENTIONS_DATA
* @type regex
*/
Atlas.EXTENTIONS_DATA = ".json";

/**
* Get the entity's path
*
* @method getPath
*/
Atlas.prototype.getPath = function() {
    return this.root + '/' + Atlas.KEY;
};

/**
* Routes the entity
*
* @method routing
*/
Atlas.prototype.routing = function() {
    var instance = this;

    this.app.get(this.getPath(), function(req, res) {
        var filepath = "./app" + req.query.path;
        FileManager.List(filepath, {recursive: true}, function(_error, _files) {
            res.setHeader('content-type', 'text/plain');
            res.statusCode = 500;

            if (_error) {
                res.write(_error);
            } else {
                res.statusCode = 200;
                res.setHeader('content-type', 'application/json');

                var atlases = new Array();
                for (var i = 0; i < _files.length; i++) {
                    var file = _files[i];

                    try {
                        // get file extension
                        var extension = path.extname(file);

                        // if the extenstion is allowed
                        if (Atlas.EXTENTIONS_IMAGE_FILTER.test(extension)) {
                            var filePathWithoutExtension = file.split(extension)[0];
                            var fullPathWithoutExtenstion = filepath + filePathWithoutExtension;
                            var fullPathWithJSONExtenstion = fullPathWithoutExtenstion + Atlas.EXTENTIONS_DATA;
                            if (fs.existsSync(fullPathWithJSONExtenstion) === true) {
                                var imageNameWithDashes = file.replace(/\//g, "-");
                                if (imageNameWithDashes[0] == "-") {
                                    imageNameWithDashes = imageNameWithDashes.substr(1);
                                }
                                
                                // add the atlas
                                atlases.push({
                                    name: path.basename(imageNameWithDashes, extension),
                                    path: filePathWithoutExtension
                                });
                            } else {
                                console.warn("Associated json atlas not found for: " + file);
                            }
                        }
                    }   catch(e) {
                        console.error(e);
                    }
                };

                var data = JSON.stringify({
                    atlases: atlases
                });

                res.write(data);
            }

            res.end();
        });
    });
};

module.exports = Atlas;